alpine-3.21
alpine-3.21/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM alpine:3.21
	LABEL distro_style="apk"
	RUN apk update && apk upgrade
	RUN apk add build-base bzip2 git tar curl ca-certificates openssl
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master
	RUN strip /usr/local/bin/opam*

	FROM alpine:3.21
	RUN <<-EOF cat >> /etc/apk/repositories
		@edge https://dl-cdn.alpinelinux.org/alpine/edge/main
		@edgecommunity https://dl-cdn.alpinelinux.org/alpine/edge/community
		@testing https://dl-cdn.alpinelinux.org/alpine/edge/testing
	EOF
	RUN apk update && apk upgrade
	RUN apk add build-base patch tar ca-certificates git rsync curl sudo bash libx11-dev nano coreutils xz ncurses-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN addgroup -S -g 1000 opam
	RUN adduser -S -u 1000 -G opam opam
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	USER opam
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

alpine-3.21/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM alpine:3.21
	LABEL distro_style="apk"
	RUN apk update && apk upgrade
	RUN apk add build-base bzip2 git tar curl ca-certificates openssl
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master
	RUN strip /usr/local/bin/opam*

	FROM alpine:3.21
	RUN <<-EOF cat >> /etc/apk/repositories
		@edge https://dl-cdn.alpinelinux.org/alpine/edge/main
		@edgecommunity https://dl-cdn.alpinelinux.org/alpine/edge/community
		@testing https://dl-cdn.alpinelinux.org/alpine/edge/testing
	EOF
	RUN apk update && apk upgrade
	RUN apk add build-base patch tar ca-certificates git rsync curl sudo bash libx11-dev nano coreutils xz ncurses-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN addgroup -S -g 1000 opam
	RUN adduser -S -u 1000 -G opam opam
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	USER opam
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:alpine-3.21-opam-arm64, ocurrent/opam-staging:alpine-3.21-opam-amd64 -> ocaml/opam:alpine-3.21-opam
4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.08-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.08-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.08
ocurrent/opam-staging:alpine-3.21-ocaml-4.08-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.08-amd64 -> ocaml/opam:alpine-ocaml-4.08
4.08.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.08-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.08-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.08-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.08-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.08-afl-amd64 -> ocaml/opam:alpine-ocaml-4.08-afl
4.08.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.08-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.08-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.08-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.08-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.08-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.08-flambda
4.08.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+fp
	RUN opam pin add -k version ocaml-variants 4.08.1+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.08-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.08-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.08-fp-amd64 -> ocaml/opam:alpine-ocaml-4.08-fp
4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.09-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.09-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.09
ocurrent/opam-staging:alpine-3.21-ocaml-4.09-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.09-amd64 -> ocaml/opam:alpine-ocaml-4.09
4.09.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.09-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.09-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.09-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.09-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.09-afl-amd64 -> ocaml/opam:alpine-ocaml-4.09-afl
4.09.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.09-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.09-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.09-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.09-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.09-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.09-flambda
4.09.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+fp
	RUN opam pin add -k version ocaml-variants 4.09.1+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.09-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.09-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.09-fp-amd64 -> ocaml/opam:alpine-ocaml-4.09-fp
4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.10-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.10-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.10
ocurrent/opam-staging:alpine-3.21-ocaml-4.10-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.10-amd64 -> ocaml/opam:alpine-ocaml-4.10
4.10.2+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.10-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.10-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.10-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.10-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.10-afl-amd64 -> ocaml/opam:alpine-ocaml-4.10-afl
4.10.2+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.10-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.10-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.10-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.10-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.10-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.10-flambda
4.10.2+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+fp
	RUN opam pin add -k version ocaml-variants 4.10.2+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.10-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.10-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.10-fp-amd64 -> ocaml/opam:alpine-ocaml-4.10-fp
4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.11-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.11-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.11
ocurrent/opam-staging:alpine-3.21-ocaml-4.11-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.11-amd64 -> ocaml/opam:alpine-ocaml-4.11
4.11.2+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.11-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.11-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.11-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.11-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.11-afl-amd64 -> ocaml/opam:alpine-ocaml-4.11-afl
4.11.2+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.11-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.11-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.11-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.11-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.11-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.11-flambda
4.11.2+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+fp
	RUN opam pin add -k version ocaml-variants 4.11.2+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.11-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.11-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.11-fp-amd64 -> ocaml/opam:alpine-ocaml-4.11-fp
4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-amd64 -> ocaml/opam:alpine-ocaml-4.12
4.12.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-afl-amd64 -> ocaml/opam:alpine-ocaml-4.12-afl
4.12.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.12-flambda
4.12.1+flambda+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda-fp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-flambda-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-flambda-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-flambda-fp-amd64 -> ocaml/opam:alpine-ocaml-4.12-flambda-fp
4.12.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-fp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-fp-amd64 -> ocaml/opam:alpine-ocaml-4.12-fp
4.12.1+nnp/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+nnp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-nnp-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-nnp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-nnp
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-nnp-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-nnp-amd64 -> ocaml/opam:alpine-ocaml-4.12-nnp
4.12.1+nnpchecker/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnpchecker
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-nnpchecker-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-nnpchecker
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-nnpchecker-amd64 -> ocaml/opam:alpine-ocaml-4.12-nnpchecker
4.12.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.12-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.12-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-4.12-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.12-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-4.12-no-flat-float-array
4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-amd64 -> ocaml/opam:alpine-ocaml-4.13
4.13.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-afl-amd64 -> ocaml/opam:alpine-ocaml-4.13-afl
4.13.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.13-flambda
4.13.1+flambda+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda-fp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-flambda-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-flambda-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-flambda-fp-amd64 -> ocaml/opam:alpine-ocaml-4.13-flambda-fp
4.13.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-fp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-fp-amd64 -> ocaml/opam:alpine-ocaml-4.13-fp
4.13.1+nnp/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+nnp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-nnp-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-nnp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-nnp
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-nnp-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-nnp-amd64 -> ocaml/opam:alpine-ocaml-4.13-nnp
4.13.1+nnpchecker/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnpchecker
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-nnpchecker-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-nnpchecker
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-nnpchecker-amd64 -> ocaml/opam:alpine-ocaml-4.13-nnpchecker
4.13.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.13-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.13-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-4.13-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.13-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-4.13-no-flat-float-array
4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-amd64 -> ocaml/opam:alpine-ocaml-4.14
4.14.2+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-afl
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-afl-amd64 -> ocaml/opam:alpine-ocaml-4.14-afl
4.14.2+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-flambda-amd64 -> ocaml/opam:alpine-ocaml-4.14-flambda
4.14.2+flambda+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda-fp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-flambda-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-flambda-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-flambda-fp-amd64 -> ocaml/opam:alpine-ocaml-4.14-flambda-fp
4.14.2+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-fp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-fp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-fp
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-fp-amd64 -> ocaml/opam:alpine-ocaml-4.14-fp
4.14.2+nnp/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+nnp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-nnp-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-nnp-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-nnp
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-nnp-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-nnp-amd64 -> ocaml/opam:alpine-ocaml-4.14-nnp
4.14.2+nnpchecker/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnpchecker
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-nnpchecker-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-nnpchecker
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-nnpchecker-amd64 -> ocaml/opam:alpine-ocaml-4.14-nnpchecker
4.14.2+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-4.14-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-4.14-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-4.14-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-4.14-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-4.14-no-flat-float-array
5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.0-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.0
ocurrent/opam-staging:alpine-3.21-ocaml-5.0-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-amd64 -> ocaml/opam:alpine-ocaml-5.0
5.0.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.0-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.0-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.0-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-afl-amd64 -> ocaml/opam:alpine-ocaml-5.0-afl
5.0.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.0-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.0-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.0-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.0-flambda
5.0.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.0-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.0-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.0-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.0-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.0-no-flat-float-array
5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.1-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.1
ocurrent/opam-staging:alpine-3.21-ocaml-5.1-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-amd64 -> ocaml/opam:alpine-ocaml-5.1
5.1.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.1-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.1-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.1-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-afl-amd64 -> ocaml/opam:alpine-ocaml-5.1-afl
5.1.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.1-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.1-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.1-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.1-flambda
5.1.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.1-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.1-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.1-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.1-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.1-no-flat-float-array
5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.2-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.2
ocurrent/opam-staging:alpine-3.21-ocaml-5.2-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-amd64 -> ocaml/opam:alpine-ocaml-5.2
5.2.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.2-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.2-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.2-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-afl-amd64 -> ocaml/opam:alpine-ocaml-5.2-afl
5.2.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.2-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.2-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.2-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.2-flambda
5.2.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.2-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.2-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.2-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.2-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.2-no-flat-float-array
5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.3-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-amd64 -> ocaml/opam:alpine
ocurrent/opam-staging:alpine-3.21-ocaml-5.3-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-amd64 -> ocaml/opam:alpine-3.21
ocurrent/opam-staging:alpine-3.21-ocaml-5.3-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.3
ocurrent/opam-staging:alpine-3.21-ocaml-5.3-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-amd64 -> ocaml/opam:alpine-ocaml-5.3
5.3.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.3-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.3-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.3-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-afl-amd64 -> ocaml/opam:alpine-ocaml-5.3-afl
5.3.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.3-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.3-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.3-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.3-flambda
5.3.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.3-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.3-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.3-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.3-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.3-no-flat-float-array
5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-alpha1
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-amd64 -> ocaml/opam:alpine-ocaml-5.4-alpha1
5.4.0~alpha1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-alpha1-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-afl-amd64 -> ocaml/opam:alpine-ocaml-5.4-alpha1-afl
5.4.0~alpha1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-alpha1-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.4-alpha1-flambda
5.4.0~alpha1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-alpha1-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-alpha1-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.4-alpha1-no-flat-float-array
5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-amd64 -> ocaml/opam:alpine-ocaml-5.4
5.4.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-afl-amd64 -> ocaml/opam:alpine-ocaml-5.4-afl
5.4.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.4-flambda
5.4.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.4-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.4-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.4-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.4-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.4-no-flat-float-array
5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.5-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.5
ocurrent/opam-staging:alpine-3.21-ocaml-5.5-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-amd64 -> ocaml/opam:alpine-ocaml-5.5
5.5.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.5-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-afl-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.5-afl
ocurrent/opam-staging:alpine-3.21-ocaml-5.5-afl-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-afl-amd64 -> ocaml/opam:alpine-ocaml-5.5-afl
5.5.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.5-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-flambda-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.5-flambda
ocurrent/opam-staging:alpine-3.21-ocaml-5.5-flambda-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-flambda-amd64 -> ocaml/opam:alpine-ocaml-5.5-flambda
5.5.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:alpine-3.21-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apk update && apk upgrade
	RUN apk add zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:alpine-3.21-ocaml-5.5-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-no-flat-float-array-amd64 -> ocaml/opam:alpine-3.21-ocaml-5.5-no-flat-float-array
ocurrent/opam-staging:alpine-3.21-ocaml-5.5-no-flat-float-array-arm64, ocurrent/opam-staging:alpine-3.21-ocaml-5.5-no-flat-float-array-amd64 -> ocaml/opam:alpine-ocaml-5.5-no-flat-float-array
archlinux
archlinux/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM archlinux:latest
	LABEL distro_style="pacman"
	RUN pacman -Syu --noconfirm make gcc patch tar ca-certificates git rsync curl sudo bash libx11 nano coreutils xz ncurses diffutils unzip && yes | pacman -Scc
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master
	RUN strip /usr/local/bin/opam*

	FROM archlinux:latest
	RUN pacman -Syu --noconfirm make gcc patch tar ca-certificates git rsync curl sudo bash libx11 nano coreutils xz ncurses diffutils unzip bubblewrap && yes | pacman -Scc
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN useradd -u 1000  -d /home/opam -m --user-group opam
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	USER opam
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:archlinux-opam-amd64 -> ocaml/opam:archlinux-opam
4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.08-amd64 -> ocaml/opam:archlinux-ocaml-4.08
4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.09-amd64 -> ocaml/opam:archlinux-ocaml-4.09
4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.10-amd64 -> ocaml/opam:archlinux-ocaml-4.10
4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.11-amd64 -> ocaml/opam:archlinux-ocaml-4.11
4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.12-amd64 -> ocaml/opam:archlinux-ocaml-4.12
4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.13-amd64 -> ocaml/opam:archlinux-ocaml-4.13
4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-4.14-amd64 -> ocaml/opam:archlinux-ocaml-4.14
5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.0-amd64 -> ocaml/opam:archlinux-ocaml-5.0
5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN pacman -Syu --noconfirm zstd && yes | pacman -Scc
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.1-amd64 -> ocaml/opam:archlinux-ocaml-5.1
5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN pacman -Syu --noconfirm zstd && yes | pacman -Scc
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.2-amd64 -> ocaml/opam:archlinux-ocaml-5.2
5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN pacman -Syu --noconfirm zstd && yes | pacman -Scc
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.3-amd64 -> ocaml/opam:archlinux
ocurrent/opam-staging:archlinux-ocaml-5.3-amd64 -> ocaml/opam:archlinux-ocaml-5.3
5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN pacman -Syu --noconfirm zstd && yes | pacman -Scc
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.4-alpha1-amd64 -> ocaml/opam:archlinux-ocaml-5.4-alpha1
5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN pacman -Syu --noconfirm zstd && yes | pacman -Scc
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.4-amd64 -> ocaml/opam:archlinux-ocaml-5.4
5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:archlinux-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN pacman -Syu --noconfirm zstd && yes | pacman -Scc
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:archlinux-ocaml-5.5-amd64 -> ocaml/opam:archlinux-ocaml-5.5
debian-12
debian-12/s390x
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:12
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:12
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-12/ppc64le
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:12
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:12
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-12/arm32v7
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM --platform=arm debian:12
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM --platform=arm debian:12
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	ENTRYPOINT [ "/usr/bin/linux32" ]
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-12/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:12
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:12
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-12/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:12
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:12
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-12/i386
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM --platform=386 debian:12
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM --platform=386 debian:12
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	ENTRYPOINT [ "/usr/bin/linux32" ]
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:debian-12-opam-s390x, ocurrent/opam-staging:debian-12-opam-ppc64le, ocurrent/opam-staging:debian-12-opam-arm32v7, ocurrent/opam-staging:debian-12-opam-arm64, ocurrent/opam-staging:debian-12-opam-amd64, ocurrent/opam-staging:debian-12-opam-i386 -> ocaml/opam:debian-12-opam
4.08.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.08-s390x, ocurrent/opam-staging:debian-12-ocaml-4.08-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.08-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.08-arm64, ocurrent/opam-staging:debian-12-ocaml-4.08-amd64, ocurrent/opam-staging:debian-12-ocaml-4.08-i386 -> ocaml/opam:debian-12-ocaml-4.08
ocurrent/opam-staging:debian-12-ocaml-4.08-s390x, ocurrent/opam-staging:debian-12-ocaml-4.08-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.08-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.08-arm64, ocurrent/opam-staging:debian-12-ocaml-4.08-amd64, ocurrent/opam-staging:debian-12-ocaml-4.08-i386 -> ocaml/opam:debian-ocaml-4.08
4.08.1+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+afl
	RUN opam pin add -k version ocaml-variants 4.08.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.08-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-i386 -> ocaml/opam:debian-12-ocaml-4.08-afl
ocurrent/opam-staging:debian-12-ocaml-4.08-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.08-afl-i386 -> ocaml/opam:debian-ocaml-4.08-afl
4.08.1+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+flambda
	RUN opam pin add -k version ocaml-variants 4.08.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.08-flambda
ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.08-flambda-i386 -> ocaml/opam:debian-ocaml-4.08-flambda
4.08.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-variants.4.08.1+fp
	RUN opam pin add -k version ocaml-variants 4.08.1+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.08-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.08-fp
ocurrent/opam-staging:debian-12-ocaml-4.08-fp-amd64 -> ocaml/opam:debian-ocaml-4.08-fp
4.09.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.09-s390x, ocurrent/opam-staging:debian-12-ocaml-4.09-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.09-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.09-arm64, ocurrent/opam-staging:debian-12-ocaml-4.09-amd64, ocurrent/opam-staging:debian-12-ocaml-4.09-i386 -> ocaml/opam:debian-12-ocaml-4.09
ocurrent/opam-staging:debian-12-ocaml-4.09-s390x, ocurrent/opam-staging:debian-12-ocaml-4.09-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.09-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.09-arm64, ocurrent/opam-staging:debian-12-ocaml-4.09-amd64, ocurrent/opam-staging:debian-12-ocaml-4.09-i386 -> ocaml/opam:debian-ocaml-4.09
4.09.1+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+afl
	RUN opam pin add -k version ocaml-variants 4.09.1+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.09-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-i386 -> ocaml/opam:debian-12-ocaml-4.09-afl
ocurrent/opam-staging:debian-12-ocaml-4.09-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.09-afl-i386 -> ocaml/opam:debian-ocaml-4.09-afl
4.09.1+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+flambda
	RUN opam pin add -k version ocaml-variants 4.09.1+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.09-flambda
ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.09-flambda-i386 -> ocaml/opam:debian-ocaml-4.09-flambda
4.09.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-variants.4.09.1+fp
	RUN opam pin add -k version ocaml-variants 4.09.1+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.09-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.09-fp
ocurrent/opam-staging:debian-12-ocaml-4.09-fp-amd64 -> ocaml/opam:debian-ocaml-4.09-fp
4.10.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.10-s390x, ocurrent/opam-staging:debian-12-ocaml-4.10-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.10-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.10-arm64, ocurrent/opam-staging:debian-12-ocaml-4.10-amd64, ocurrent/opam-staging:debian-12-ocaml-4.10-i386 -> ocaml/opam:debian-12-ocaml-4.10
ocurrent/opam-staging:debian-12-ocaml-4.10-s390x, ocurrent/opam-staging:debian-12-ocaml-4.10-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.10-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.10-arm64, ocurrent/opam-staging:debian-12-ocaml-4.10-amd64, ocurrent/opam-staging:debian-12-ocaml-4.10-i386 -> ocaml/opam:debian-ocaml-4.10
4.10.2+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+afl
	RUN opam pin add -k version ocaml-variants 4.10.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.10-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-i386 -> ocaml/opam:debian-12-ocaml-4.10-afl
ocurrent/opam-staging:debian-12-ocaml-4.10-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.10-afl-i386 -> ocaml/opam:debian-ocaml-4.10-afl
4.10.2+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+flambda
	RUN opam pin add -k version ocaml-variants 4.10.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.10-flambda
ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.10-flambda-i386 -> ocaml/opam:debian-ocaml-4.10-flambda
4.10.2+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-variants.4.10.2+fp
	RUN opam pin add -k version ocaml-variants 4.10.2+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.10-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.10-fp
ocurrent/opam-staging:debian-12-ocaml-4.10-fp-amd64 -> ocaml/opam:debian-ocaml-4.10-fp
4.11.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.11-s390x, ocurrent/opam-staging:debian-12-ocaml-4.11-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.11-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.11-arm64, ocurrent/opam-staging:debian-12-ocaml-4.11-amd64, ocurrent/opam-staging:debian-12-ocaml-4.11-i386 -> ocaml/opam:debian-12-ocaml-4.11
ocurrent/opam-staging:debian-12-ocaml-4.11-s390x, ocurrent/opam-staging:debian-12-ocaml-4.11-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.11-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.11-arm64, ocurrent/opam-staging:debian-12-ocaml-4.11-amd64, ocurrent/opam-staging:debian-12-ocaml-4.11-i386 -> ocaml/opam:debian-ocaml-4.11
4.11.2+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+afl
	RUN opam pin add -k version ocaml-variants 4.11.2+afl
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.11-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-i386 -> ocaml/opam:debian-12-ocaml-4.11-afl
ocurrent/opam-staging:debian-12-ocaml-4.11-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.11-afl-i386 -> ocaml/opam:debian-ocaml-4.11-afl
4.11.2+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+flambda
	RUN opam pin add -k version ocaml-variants 4.11.2+flambda
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.11-flambda
ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.11-flambda-i386 -> ocaml/opam:debian-ocaml-4.11-flambda
4.11.2+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-variants.4.11.2+fp
	RUN opam pin add -k version ocaml-variants 4.11.2+fp
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.11-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.11-fp
ocurrent/opam-staging:debian-12-ocaml-4.11-fp-amd64 -> ocaml/opam:debian-ocaml-4.11-fp
4.12.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-i386 -> ocaml/opam:debian-12-ocaml-4.12
ocurrent/opam-staging:debian-12-ocaml-4.12-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-i386 -> ocaml/opam:debian-ocaml-4.12
4.12.1+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-i386 -> ocaml/opam:debian-12-ocaml-4.12-afl
ocurrent/opam-staging:debian-12-ocaml-4.12-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-afl-i386 -> ocaml/opam:debian-ocaml-4.12-afl
4.12.1+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.12-flambda
ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-i386 -> ocaml/opam:debian-ocaml-4.12-flambda
4.12.1+flambda+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-flambda-fp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.12-flambda-fp
ocurrent/opam-staging:debian-12-ocaml-4.12-flambda-fp-amd64 -> ocaml/opam:debian-ocaml-4.12-flambda-fp
4.12.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-fp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.12-fp
ocurrent/opam-staging:debian-12-ocaml-4.12-fp-amd64 -> ocaml/opam:debian-ocaml-4.12-fp
4.12.1+nnp/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+nnp/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+nnp/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+nnp/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+nnp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+nnp/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-i386 -> ocaml/opam:debian-12-ocaml-4.12-nnp
ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-nnp-i386 -> ocaml/opam:debian-ocaml-4.12-nnp
4.12.1+nnpchecker/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-nnpchecker
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-nnpchecker-amd64 -> ocaml/opam:debian-12-ocaml-4.12-nnpchecker
ocurrent/opam-staging:debian-12-ocaml-4.12-nnpchecker-amd64 -> ocaml/opam:debian-ocaml-4.12-nnpchecker
4.12.1+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-variants.4.12.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.12.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-4.12-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-4.12-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-4.12-no-flat-float-array
4.13.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-i386 -> ocaml/opam:debian-12-ocaml-4.13
ocurrent/opam-staging:debian-12-ocaml-4.13-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-i386 -> ocaml/opam:debian-ocaml-4.13
4.13.1+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-i386 -> ocaml/opam:debian-12-ocaml-4.13-afl
ocurrent/opam-staging:debian-12-ocaml-4.13-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-afl-i386 -> ocaml/opam:debian-ocaml-4.13-afl
4.13.1+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.13-flambda
ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-i386 -> ocaml/opam:debian-ocaml-4.13-flambda
4.13.1+flambda+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-flambda-fp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.13-flambda-fp
ocurrent/opam-staging:debian-12-ocaml-4.13-flambda-fp-amd64 -> ocaml/opam:debian-ocaml-4.13-flambda-fp
4.13.1+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-fp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.13-fp
ocurrent/opam-staging:debian-12-ocaml-4.13-fp-amd64 -> ocaml/opam:debian-ocaml-4.13-fp
4.13.1+nnp/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+nnp/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+nnp/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+nnp/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+nnp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+nnp/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-i386 -> ocaml/opam:debian-12-ocaml-4.13-nnp
ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-nnp-i386 -> ocaml/opam:debian-ocaml-4.13-nnp
4.13.1+nnpchecker/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-nnpchecker
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-nnpchecker-amd64 -> ocaml/opam:debian-12-ocaml-4.13-nnpchecker
ocurrent/opam-staging:debian-12-ocaml-4.13-nnpchecker-amd64 -> ocaml/opam:debian-ocaml-4.13-nnpchecker
4.13.1+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-variants.4.13.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.13.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-4.13-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-4.13-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-4.13-no-flat-float-array
4.14.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-i386 -> ocaml/opam:debian-12-ocaml-4.14
ocurrent/opam-staging:debian-12-ocaml-4.14-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-i386 -> ocaml/opam:debian-ocaml-4.14
4.14.2+afl/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+afl/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+afl/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+afl/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-i386 -> ocaml/opam:debian-12-ocaml-4.14-afl
ocurrent/opam-staging:debian-12-ocaml-4.14-afl-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-afl-i386 -> ocaml/opam:debian-ocaml-4.14-afl
4.14.2+flambda/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+flambda/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+flambda/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+flambda/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-i386 -> ocaml/opam:debian-12-ocaml-4.14-flambda
ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-i386 -> ocaml/opam:debian-ocaml-4.14-flambda
4.14.2+flambda+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-flambda-fp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.14-flambda-fp
ocurrent/opam-staging:debian-12-ocaml-4.14-flambda-fp-amd64 -> ocaml/opam:debian-ocaml-4.14-flambda-fp
4.14.2+fp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-fp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-fp-amd64 -> ocaml/opam:debian-12-ocaml-4.14-fp
ocurrent/opam-staging:debian-12-ocaml-4.14-fp-amd64 -> ocaml/opam:debian-ocaml-4.14-fp
4.14.2+nnp/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+nnp/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+nnp/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+nnp/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+nnp/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+nnp/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnp
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-i386 -> ocaml/opam:debian-12-ocaml-4.14-nnp
ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-nnp-i386 -> ocaml/opam:debian-ocaml-4.14-nnp
4.14.2+nnpchecker/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-nnpchecker
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-nnpchecker-amd64 -> ocaml/opam:debian-12-ocaml-4.14-nnpchecker
ocurrent/opam-staging:debian-12-ocaml-4.14-nnpchecker-amd64 -> ocaml/opam:debian-ocaml-4.14-nnpchecker
4.14.2+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-variants.4.14.2+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 4.14.2+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-4.14-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-4.14-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-4.14-no-flat-float-array
5.0.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.0-s390x, ocurrent/opam-staging:debian-12-ocaml-5.0-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.0-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.0-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-amd64, ocurrent/opam-staging:debian-12-ocaml-5.0-i386 -> ocaml/opam:debian-12-ocaml-5.0
ocurrent/opam-staging:debian-12-ocaml-5.0-s390x, ocurrent/opam-staging:debian-12-ocaml-5.0-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.0-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.0-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-amd64, ocurrent/opam-staging:debian-12-ocaml-5.0-i386 -> ocaml/opam:debian-ocaml-5.0
5.0.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.0-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.0-afl
ocurrent/opam-staging:debian-12-ocaml-5.0-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-afl-amd64 -> ocaml/opam:debian-ocaml-5.0-afl
5.0.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.0-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.0-flambda
ocurrent/opam-staging:debian-12-ocaml-5.0-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-flambda-amd64 -> ocaml/opam:debian-ocaml-5.0-flambda
5.0.0+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-variants.5.0.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.0.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.0-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.0-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.0-no-flat-float-array
5.1.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.1-s390x, ocurrent/opam-staging:debian-12-ocaml-5.1-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.1-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.1-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-amd64, ocurrent/opam-staging:debian-12-ocaml-5.1-i386 -> ocaml/opam:debian-12-ocaml-5.1
ocurrent/opam-staging:debian-12-ocaml-5.1-s390x, ocurrent/opam-staging:debian-12-ocaml-5.1-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.1-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.1-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-amd64, ocurrent/opam-staging:debian-12-ocaml-5.1-i386 -> ocaml/opam:debian-ocaml-5.1
5.1.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.1-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.1-afl
ocurrent/opam-staging:debian-12-ocaml-5.1-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-afl-amd64 -> ocaml/opam:debian-ocaml-5.1-afl
5.1.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.1-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.1-flambda
ocurrent/opam-staging:debian-12-ocaml-5.1-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-flambda-amd64 -> ocaml/opam:debian-ocaml-5.1-flambda
5.1.1+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-variants.5.1.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.1.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.1-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.1-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.1-no-flat-float-array
5.2.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.2-s390x, ocurrent/opam-staging:debian-12-ocaml-5.2-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.2-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.2-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-amd64, ocurrent/opam-staging:debian-12-ocaml-5.2-i386 -> ocaml/opam:debian-12-ocaml-5.2
ocurrent/opam-staging:debian-12-ocaml-5.2-s390x, ocurrent/opam-staging:debian-12-ocaml-5.2-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.2-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.2-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-amd64, ocurrent/opam-staging:debian-12-ocaml-5.2-i386 -> ocaml/opam:debian-ocaml-5.2
5.2.1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.2-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.2-afl
ocurrent/opam-staging:debian-12-ocaml-5.2-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-afl-amd64 -> ocaml/opam:debian-ocaml-5.2-afl
5.2.1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.2-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.2-flambda
ocurrent/opam-staging:debian-12-ocaml-5.2-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-flambda-amd64 -> ocaml/opam:debian-ocaml-5.2-flambda
5.2.1+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-variants.5.2.1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.2.1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.2-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.2-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.2-no-flat-float-array
5.3.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.3-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-i386 -> ocaml/opam:latest
ocurrent/opam-staging:debian-12-ocaml-5.3-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-i386 -> ocaml/opam:debian
ocurrent/opam-staging:debian-12-ocaml-5.3-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-i386 -> ocaml/opam:debian-12
ocurrent/opam-staging:debian-12-ocaml-5.3-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-i386 -> ocaml/opam:debian-12-ocaml-5.3
ocurrent/opam-staging:debian-12-ocaml-5.3-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-i386 -> ocaml/opam:debian-ocaml-5.3
5.3.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.3-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.3-afl
ocurrent/opam-staging:debian-12-ocaml-5.3-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-afl-amd64 -> ocaml/opam:debian-ocaml-5.3-afl
5.3.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.3-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.3-flambda
ocurrent/opam-staging:debian-12-ocaml-5.3-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-flambda-amd64 -> ocaml/opam:debian-ocaml-5.3-flambda
5.3.0+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-variants.5.3.0+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.3.0+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.3-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.3-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.3-no-flat-float-array
5.4.0~alpha1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-i386 -> ocaml/opam:debian-12-ocaml-5.4-alpha1
ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-i386 -> ocaml/opam:debian-ocaml-5.4-alpha1
5.4.0~alpha1+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.4-alpha1-afl
ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-afl-amd64 -> ocaml/opam:debian-ocaml-5.4-alpha1-afl
5.4.0~alpha1+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.4-alpha1-flambda
ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-flambda-amd64 -> ocaml/opam:debian-ocaml-5.4-alpha1-flambda
5.4.0~alpha1+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-variants.5.4.0~alpha1+options,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0~alpha1+options
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.4-alpha1-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-alpha1-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.4-alpha1-no-flat-float-array
5.4.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-i386 -> ocaml/opam:debian-12-ocaml-5.4
ocurrent/opam-staging:debian-12-ocaml-5.4-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-i386 -> ocaml/opam:debian-ocaml-5.4
5.4.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.4-afl
ocurrent/opam-staging:debian-12-ocaml-5.4-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-afl-amd64 -> ocaml/opam:debian-ocaml-5.4-afl
5.4.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.4-flambda
ocurrent/opam-staging:debian-12-ocaml-5.4-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-flambda-amd64 -> ocaml/opam:debian-ocaml-5.4-flambda
5.4.0+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.4-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.4-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.4-no-flat-float-array
5.5.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.5-s390x, ocurrent/opam-staging:debian-12-ocaml-5.5-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.5-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.5-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-amd64, ocurrent/opam-staging:debian-12-ocaml-5.5-i386 -> ocaml/opam:debian-12-ocaml-5.5
ocurrent/opam-staging:debian-12-ocaml-5.5-s390x, ocurrent/opam-staging:debian-12-ocaml-5.5-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.5-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.5-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-amd64, ocurrent/opam-staging:debian-12-ocaml-5.5-i386 -> ocaml/opam:debian-ocaml-5.5
5.5.0+afl/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+afl/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-afl
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.5-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-afl-amd64 -> ocaml/opam:debian-12-ocaml-5.5-afl
ocurrent/opam-staging:debian-12-ocaml-5.5-afl-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-afl-amd64 -> ocaml/opam:debian-ocaml-5.5-afl
5.5.0+flambda/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+flambda/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-flambda
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.5-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-flambda-amd64 -> ocaml/opam:debian-12-ocaml-5.5-flambda
ocurrent/opam-staging:debian-12-ocaml-5.5-flambda-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-flambda-amd64 -> ocaml/opam:debian-ocaml-5.5-flambda
5.5.0+no-flat-float-array/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+no-flat-float-array/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+no-flat-float-array/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+no-flat-float-array/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+no-flat-float-array/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0+no-flat-float-array/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-12-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk,ocaml-options-only-no-flat-float-array
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-i386 -> ocaml/opam:debian-12-ocaml-5.5-no-flat-float-array
ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-s390x, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-ppc64le, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-arm32v7, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-arm64, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-amd64, ocurrent/opam-staging:debian-12-ocaml-5.5-no-flat-float-array-i386 -> ocaml/opam:debian-ocaml-5.5-no-flat-float-array
archive
	FROM ocaml/opam:archive AS opam-archive
	FROM ocurrent/opam-staging:debian-12-opam-amd64 AS archive
	WORKDIR /home/opam/opam-repository
	RUN --mount=type=bind,target=/cache,from=opam-archive rsync -aH /cache/cache/ /home/opam/opam-repository/cache/
	RUN opam admin cache --link=/home/opam/opam-repository/cache

	FROM alpine:latest
	COPY --chown=0:0 --from=archive [ "/home/opam/opam-repository/cache", "/cache" ]

ocurrent/opam-staging:archive -> ocaml/opam:archive
debian-11
debian-11/arm32v7
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM --platform=arm debian:11
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM --platform=arm debian:11
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	ENTRYPOINT [ "/usr/bin/linux32" ]
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-11/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:11
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:11
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-11/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:11
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:11
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

debian-11/i386
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM --platform=386 debian:11
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM --platform=386 debian:11
	SHELL [ "/usr/bin/linux32", "/bin/bash", "-c" ]
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	ENTRYPOINT [ "/usr/bin/linux32" ]
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:debian-11-opam-arm32v7, ocurrent/opam-staging:debian-11-opam-arm64, ocurrent/opam-staging:debian-11-opam-amd64, ocurrent/opam-staging:debian-11-opam-i386 -> ocaml/opam:debian-11-opam
4.08.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.08-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.08-arm64, ocurrent/opam-staging:debian-11-ocaml-4.08-amd64, ocurrent/opam-staging:debian-11-ocaml-4.08-i386 -> ocaml/opam:debian-11-ocaml-4.08
4.09.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.09-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.09-arm64, ocurrent/opam-staging:debian-11-ocaml-4.09-amd64, ocurrent/opam-staging:debian-11-ocaml-4.09-i386 -> ocaml/opam:debian-11-ocaml-4.09
4.10.2/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.10-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.10-arm64, ocurrent/opam-staging:debian-11-ocaml-4.10-amd64, ocurrent/opam-staging:debian-11-ocaml-4.10-i386 -> ocaml/opam:debian-11-ocaml-4.10
4.11.2/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.11-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.11-arm64, ocurrent/opam-staging:debian-11-ocaml-4.11-amd64, ocurrent/opam-staging:debian-11-ocaml-4.11-i386 -> ocaml/opam:debian-11-ocaml-4.11
4.12.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.12-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.12-arm64, ocurrent/opam-staging:debian-11-ocaml-4.12-amd64, ocurrent/opam-staging:debian-11-ocaml-4.12-i386 -> ocaml/opam:debian-11-ocaml-4.12
4.13.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.13-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.13-arm64, ocurrent/opam-staging:debian-11-ocaml-4.13-amd64, ocurrent/opam-staging:debian-11-ocaml-4.13-i386 -> ocaml/opam:debian-11-ocaml-4.13
4.14.2/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-4.14-arm32v7, ocurrent/opam-staging:debian-11-ocaml-4.14-arm64, ocurrent/opam-staging:debian-11-ocaml-4.14-amd64, ocurrent/opam-staging:debian-11-ocaml-4.14-i386 -> ocaml/opam:debian-11-ocaml-4.14
5.0.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.0-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.0-arm64, ocurrent/opam-staging:debian-11-ocaml-5.0-amd64, ocurrent/opam-staging:debian-11-ocaml-5.0-i386 -> ocaml/opam:debian-11-ocaml-5.0
5.1.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.1-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.1-arm64, ocurrent/opam-staging:debian-11-ocaml-5.1-amd64, ocurrent/opam-staging:debian-11-ocaml-5.1-i386 -> ocaml/opam:debian-11-ocaml-5.1
5.2.1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.2-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.2-arm64, ocurrent/opam-staging:debian-11-ocaml-5.2-amd64, ocurrent/opam-staging:debian-11-ocaml-5.2-i386 -> ocaml/opam:debian-11-ocaml-5.2
5.3.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.3-arm64, ocurrent/opam-staging:debian-11-ocaml-5.3-amd64, ocurrent/opam-staging:debian-11-ocaml-5.3-i386 -> ocaml/opam:debian-11
ocurrent/opam-staging:debian-11-ocaml-5.3-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.3-arm64, ocurrent/opam-staging:debian-11-ocaml-5.3-amd64, ocurrent/opam-staging:debian-11-ocaml-5.3-i386 -> ocaml/opam:debian-11-ocaml-5.3
5.4.0~alpha1/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.4-alpha1-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:debian-11-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:debian-11-ocaml-5.4-alpha1-i386 -> ocaml/opam:debian-11-ocaml-5.4-alpha1
5.4.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.4-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.4-arm64, ocurrent/opam-staging:debian-11-ocaml-5.4-amd64, ocurrent/opam-staging:debian-11-ocaml-5.4-i386 -> ocaml/opam:debian-11-ocaml-5.4
5.5.0/arm32v7
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm32v7
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/i386
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-11-opam-i386
	SHELL [ "/usr/bin/linux32", "/bin/sh", "-c" ]
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "/usr/bin/linux32", "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-11-ocaml-5.5-arm32v7, ocurrent/opam-staging:debian-11-ocaml-5.5-arm64, ocurrent/opam-staging:debian-11-ocaml-5.5-amd64, ocurrent/opam-staging:debian-11-ocaml-5.5-i386 -> ocaml/opam:debian-11-ocaml-5.5
debian-testing
debian-testing/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:testing
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:testing
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:debian-testing-opam-amd64 -> ocaml/opam:debian-testing-opam
4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.08-amd64 -> ocaml/opam:debian-testing-ocaml-4.08
4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.09-amd64 -> ocaml/opam:debian-testing-ocaml-4.09
4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.10-amd64 -> ocaml/opam:debian-testing-ocaml-4.10
4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.11-amd64 -> ocaml/opam:debian-testing-ocaml-4.11
4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.12-amd64 -> ocaml/opam:debian-testing-ocaml-4.12
4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.13-amd64 -> ocaml/opam:debian-testing-ocaml-4.13
4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-4.14-amd64 -> ocaml/opam:debian-testing-ocaml-4.14
5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.0-amd64 -> ocaml/opam:debian-testing-ocaml-5.0
5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.1-amd64 -> ocaml/opam:debian-testing-ocaml-5.1
5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.2-amd64 -> ocaml/opam:debian-testing-ocaml-5.2
5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.3-amd64 -> ocaml/opam:debian-testing
ocurrent/opam-staging:debian-testing-ocaml-5.3-amd64 -> ocaml/opam:debian-testing-ocaml-5.3
5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.4-alpha1-amd64 -> ocaml/opam:debian-testing-ocaml-5.4-alpha1
5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.4-amd64 -> ocaml/opam:debian-testing-ocaml-5.4
5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-testing-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-testing-ocaml-5.5-amd64 -> ocaml/opam:debian-testing-ocaml-5.5
debian-unstable
debian-unstable/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM debian:unstable
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM debian:unstable
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:debian-unstable-opam-amd64 -> ocaml/opam:debian-unstable-opam
4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.08-amd64 -> ocaml/opam:debian-unstable-ocaml-4.08
4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.09-amd64 -> ocaml/opam:debian-unstable-ocaml-4.09
4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.10-amd64 -> ocaml/opam:debian-unstable-ocaml-4.10
4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.11-amd64 -> ocaml/opam:debian-unstable-ocaml-4.11
4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.12-amd64 -> ocaml/opam:debian-unstable-ocaml-4.12
4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.13-amd64 -> ocaml/opam:debian-unstable-ocaml-4.13
4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-4.14-amd64 -> ocaml/opam:debian-unstable-ocaml-4.14
5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.0-amd64 -> ocaml/opam:debian-unstable-ocaml-5.0
5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.1-amd64 -> ocaml/opam:debian-unstable-ocaml-5.1
5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.2-amd64 -> ocaml/opam:debian-unstable-ocaml-5.2
5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.3-amd64 -> ocaml/opam:debian-unstable
ocurrent/opam-staging:debian-unstable-ocaml-5.3-amd64 -> ocaml/opam:debian-unstable-ocaml-5.3
5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.4-alpha1-amd64 -> ocaml/opam:debian-unstable-ocaml-5.4-alpha1
5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.4-amd64 -> ocaml/opam:debian-unstable-ocaml-5.4
5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:debian-unstable-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:debian-unstable-ocaml-5.5-amd64 -> ocaml/opam:debian-unstable-ocaml-5.5
fedora-41
fedora-41/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM fedora:41
	LABEL distro_style="rpm"
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y git patch unzip which tar curl xz libcap-devel openssl sudo bzip2 gawk && yum clean packages
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM fedora:41
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y sudo passwd bzip2 unzip patch rsync nano gcc-c++ git tar curl xz libX11-devel which m4 gawk diffutils findutils bubblewrap && yum clean packages
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN sed -i.bak '/LC_TIME LC_ALL LANGUAGE/aDefaults    env_keep += "OPAMYES OPAMJOBS OPAMVERBOSE"' /etc/sudoers
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	RUN useradd -d /home/opam -u 1000 -m -s /bin/bash opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

fedora-41/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM fedora:41
	LABEL distro_style="rpm"
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y git patch unzip which tar curl xz libcap-devel openssl sudo bzip2 gawk && yum clean packages
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM fedora:41
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y sudo passwd bzip2 unzip patch rsync nano gcc-c++ git tar curl xz libX11-devel which m4 gawk diffutils findutils bubblewrap && yum clean packages
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN sed -i.bak '/LC_TIME LC_ALL LANGUAGE/aDefaults    env_keep += "OPAMYES OPAMJOBS OPAMVERBOSE"' /etc/sudoers
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	RUN useradd -d /home/opam -u 1000 -m -s /bin/bash opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:fedora-41-opam-arm64, ocurrent/opam-staging:fedora-41-opam-amd64 -> ocaml/opam:fedora-41-opam
4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.08-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.08-amd64 -> ocaml/opam:fedora-41-ocaml-4.08
4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.09-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.09-amd64 -> ocaml/opam:fedora-41-ocaml-4.09
4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.10-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.10-amd64 -> ocaml/opam:fedora-41-ocaml-4.10
4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.11-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.11-amd64 -> ocaml/opam:fedora-41-ocaml-4.11
4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.12-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.12-amd64 -> ocaml/opam:fedora-41-ocaml-4.12
4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.13-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.13-amd64 -> ocaml/opam:fedora-41-ocaml-4.13
4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-4.14-arm64, ocurrent/opam-staging:fedora-41-ocaml-4.14-amd64 -> ocaml/opam:fedora-41-ocaml-4.14
5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.0-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.0-amd64 -> ocaml/opam:fedora-41-ocaml-5.0
5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.1-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.1-amd64 -> ocaml/opam:fedora-41-ocaml-5.1
5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.2-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.2-amd64 -> ocaml/opam:fedora-41-ocaml-5.2
5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.3-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.3-amd64 -> ocaml/opam:fedora-41
ocurrent/opam-staging:fedora-41-ocaml-5.3-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.3-amd64 -> ocaml/opam:fedora-41-ocaml-5.3
5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.4-alpha1-amd64 -> ocaml/opam:fedora-41-ocaml-5.4-alpha1
5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.4-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.4-amd64 -> ocaml/opam:fedora-41-ocaml-5.4
5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-41-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-41-ocaml-5.5-arm64, ocurrent/opam-staging:fedora-41-ocaml-5.5-amd64 -> ocaml/opam:fedora-41-ocaml-5.5
fedora-42
fedora-42/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM fedora:42
	LABEL distro_style="rpm"
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y git patch unzip which tar curl xz libcap-devel openssl sudo bzip2 gawk && yum clean packages
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM fedora:42
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y sudo passwd bzip2 unzip patch rsync nano gcc-c++ git tar curl xz libX11-devel which m4 gawk diffutils findutils bubblewrap && yum clean packages
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN sed -i.bak '/LC_TIME LC_ALL LANGUAGE/aDefaults    env_keep += "OPAMYES OPAMJOBS OPAMVERBOSE"' /etc/sudoers
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	RUN useradd -d /home/opam -u 1000 -m -s /bin/bash opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

fedora-42/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM fedora:42
	LABEL distro_style="rpm"
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y git patch unzip which tar curl xz libcap-devel openssl sudo bzip2 gawk && yum clean packages
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM fedora:42
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum group install -y "c-development" && yum clean packages
	RUN yum install -y sudo passwd bzip2 unzip patch rsync nano gcc-c++ git tar curl xz libX11-devel which m4 gawk diffutils findutils bubblewrap && yum clean packages
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN sed -i.bak '/LC_TIME LC_ALL LANGUAGE/aDefaults    env_keep += "OPAMYES OPAMJOBS OPAMVERBOSE"' /etc/sudoers
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	RUN useradd -d /home/opam -u 1000 -m -s /bin/bash opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:fedora-42-opam-arm64, ocurrent/opam-staging:fedora-42-opam-amd64 -> ocaml/opam:fedora-42-opam
4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.08-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.08-amd64 -> ocaml/opam:fedora-42-ocaml-4.08
ocurrent/opam-staging:fedora-42-ocaml-4.08-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.08-amd64 -> ocaml/opam:fedora-ocaml-4.08
4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.09-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.09-amd64 -> ocaml/opam:fedora-42-ocaml-4.09
ocurrent/opam-staging:fedora-42-ocaml-4.09-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.09-amd64 -> ocaml/opam:fedora-ocaml-4.09
4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.10-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.10-amd64 -> ocaml/opam:fedora-42-ocaml-4.10
ocurrent/opam-staging:fedora-42-ocaml-4.10-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.10-amd64 -> ocaml/opam:fedora-ocaml-4.10
4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.11-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.11-amd64 -> ocaml/opam:fedora-42-ocaml-4.11
ocurrent/opam-staging:fedora-42-ocaml-4.11-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.11-amd64 -> ocaml/opam:fedora-ocaml-4.11
4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.12-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.12-amd64 -> ocaml/opam:fedora-42-ocaml-4.12
ocurrent/opam-staging:fedora-42-ocaml-4.12-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.12-amd64 -> ocaml/opam:fedora-ocaml-4.12
4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.13-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.13-amd64 -> ocaml/opam:fedora-42-ocaml-4.13
ocurrent/opam-staging:fedora-42-ocaml-4.13-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.13-amd64 -> ocaml/opam:fedora-ocaml-4.13
4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-4.14-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.14-amd64 -> ocaml/opam:fedora-42-ocaml-4.14
ocurrent/opam-staging:fedora-42-ocaml-4.14-arm64, ocurrent/opam-staging:fedora-42-ocaml-4.14-amd64 -> ocaml/opam:fedora-ocaml-4.14
5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.0-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.0-amd64 -> ocaml/opam:fedora-42-ocaml-5.0
ocurrent/opam-staging:fedora-42-ocaml-5.0-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.0-amd64 -> ocaml/opam:fedora-ocaml-5.0
5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.1-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.1-amd64 -> ocaml/opam:fedora-42-ocaml-5.1
ocurrent/opam-staging:fedora-42-ocaml-5.1-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.1-amd64 -> ocaml/opam:fedora-ocaml-5.1
5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.2-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.2-amd64 -> ocaml/opam:fedora-42-ocaml-5.2
ocurrent/opam-staging:fedora-42-ocaml-5.2-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.2-amd64 -> ocaml/opam:fedora-ocaml-5.2
5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.3-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.3-amd64 -> ocaml/opam:fedora
ocurrent/opam-staging:fedora-42-ocaml-5.3-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.3-amd64 -> ocaml/opam:fedora-42
ocurrent/opam-staging:fedora-42-ocaml-5.3-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.3-amd64 -> ocaml/opam:fedora-42-ocaml-5.3
ocurrent/opam-staging:fedora-42-ocaml-5.3-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.3-amd64 -> ocaml/opam:fedora-ocaml-5.3
5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.4-alpha1-amd64 -> ocaml/opam:fedora-42-ocaml-5.4-alpha1
ocurrent/opam-staging:fedora-42-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.4-alpha1-amd64 -> ocaml/opam:fedora-ocaml-5.4-alpha1
5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.4-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.4-amd64 -> ocaml/opam:fedora-42-ocaml-5.4
ocurrent/opam-staging:fedora-42-ocaml-5.4-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.4-amd64 -> ocaml/opam:fedora-ocaml-5.4
5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:fedora-42-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:fedora-42-ocaml-5.5-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.5-amd64 -> ocaml/opam:fedora-42-ocaml-5.5
ocurrent/opam-staging:fedora-42-ocaml-5.5-arm64, ocurrent/opam-staging:fedora-42-ocaml-5.5-amd64 -> ocaml/opam:fedora-ocaml-5.5
oraclelinux-8
oraclelinux-8/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM oraclelinux:8
	LABEL distro_style="rpm"
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum groupinstall -y "Development Tools" && yum clean packages
	RUN yum install -y git patch unzip which tar curl xz libcap-devel openssl sudo bzip2 gawk && yum clean packages
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN curl -fOL https://github.com/containers/bubblewrap/releases/download/v0.8.0/bubblewrap-0.8.0.tar.xz
	RUN tar xf bubblewrap-0.8.0.tar.xz
	RUN cd bubblewrap-0.8.0 && ./configure --prefix=/usr/local && make && sudo make install
	RUN rm -rf bubblewrap-0.8.0.tar.xz bubblewrap-0.8.0
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM oraclelinux:8
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum groupinstall -y "Development Tools" && yum clean packages
	COPY --from=0 [ "/usr/local/bin/bwrap", "/usr/bin/bwrap" ]
	RUN yum install -y sudo passwd bzip2 unzip patch rsync nano gcc-c++ git tar curl xz libX11-devel which m4 gawk diffutils findutils && yum clean packages
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN sed -i.bak '/LC_TIME LC_ALL LANGUAGE/aDefaults    env_keep += "OPAMYES OPAMJOBS OPAMVERBOSE"' /etc/sudoers
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	RUN useradd -d /home/opam -u 1000 -m -s /bin/bash opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:oraclelinux-8-opam-amd64 -> ocaml/opam:oraclelinux-8-opam
4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.08-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.08
4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.09-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.09
4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.10-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.10
4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.11-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.11
4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.12-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.12
4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.13-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.13
4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-4.14-amd64 -> ocaml/opam:oraclelinux-8-ocaml-4.14
5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.0-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.0
5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.1-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.1
5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.2-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.2
5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.3-amd64 -> ocaml/opam:oraclelinux-8
ocurrent/opam-staging:oraclelinux-8-ocaml-5.3-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.3
5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.4-alpha1-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.4-alpha1
5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.4-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.4
5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-8-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-8-ocaml-5.5-amd64 -> ocaml/opam:oraclelinux-8-ocaml-5.5
oraclelinux-9
oraclelinux-9/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM oraclelinux:9
	LABEL distro_style="rpm"
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum groupinstall -y "Development Tools" && yum clean packages
	RUN yum install -y git patch unzip which tar curl xz libcap-devel openssl sudo bzip2 gawk && yum clean packages
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM oraclelinux:9
	RUN yum --version || dnf install -y yum
	RUN yum update -y
	RUN yum groupinstall -y "Development Tools" && yum clean packages
	RUN yum install -y sudo passwd bzip2 unzip patch rsync nano gcc-c++ git tar curl xz libX11-devel which m4 gawk diffutils findutils bubblewrap && yum clean packages
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN sed -i.bak '/LC_TIME LC_ALL LANGUAGE/aDefaults    env_keep += "OPAMYES OPAMJOBS OPAMVERBOSE"' /etc/sudoers
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN sed -i.bak 's/^Defaults.*requiretty//g' /etc/sudoers
	RUN useradd -d /home/opam -u 1000 -m -s /bin/bash opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:oraclelinux-9-opam-amd64 -> ocaml/opam:oraclelinux-9-opam
4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.08-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.08
ocurrent/opam-staging:oraclelinux-9-ocaml-4.08-amd64 -> ocaml/opam:oraclelinux-ocaml-4.08
4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.09-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.09
ocurrent/opam-staging:oraclelinux-9-ocaml-4.09-amd64 -> ocaml/opam:oraclelinux-ocaml-4.09
4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.10-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.10
ocurrent/opam-staging:oraclelinux-9-ocaml-4.10-amd64 -> ocaml/opam:oraclelinux-ocaml-4.10
4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.11-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.11
ocurrent/opam-staging:oraclelinux-9-ocaml-4.11-amd64 -> ocaml/opam:oraclelinux-ocaml-4.11
4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.12-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.12
ocurrent/opam-staging:oraclelinux-9-ocaml-4.12-amd64 -> ocaml/opam:oraclelinux-ocaml-4.12
4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.13-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.13
ocurrent/opam-staging:oraclelinux-9-ocaml-4.13-amd64 -> ocaml/opam:oraclelinux-ocaml-4.13
4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-4.14-amd64 -> ocaml/opam:oraclelinux-9-ocaml-4.14
ocurrent/opam-staging:oraclelinux-9-ocaml-4.14-amd64 -> ocaml/opam:oraclelinux-ocaml-4.14
5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.0-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.0
ocurrent/opam-staging:oraclelinux-9-ocaml-5.0-amd64 -> ocaml/opam:oraclelinux-ocaml-5.0
5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.1-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.1
ocurrent/opam-staging:oraclelinux-9-ocaml-5.1-amd64 -> ocaml/opam:oraclelinux-ocaml-5.1
5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.2-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.2
ocurrent/opam-staging:oraclelinux-9-ocaml-5.2-amd64 -> ocaml/opam:oraclelinux-ocaml-5.2
5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.3-amd64 -> ocaml/opam:oraclelinux
ocurrent/opam-staging:oraclelinux-9-ocaml-5.3-amd64 -> ocaml/opam:oraclelinux-9
ocurrent/opam-staging:oraclelinux-9-ocaml-5.3-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.3
ocurrent/opam-staging:oraclelinux-9-ocaml-5.3-amd64 -> ocaml/opam:oraclelinux-ocaml-5.3
5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.4-alpha1-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.4-alpha1
ocurrent/opam-staging:oraclelinux-9-ocaml-5.4-alpha1-amd64 -> ocaml/opam:oraclelinux-ocaml-5.4-alpha1
5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.4-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.4
ocurrent/opam-staging:oraclelinux-9-ocaml-5.4-amd64 -> ocaml/opam:oraclelinux-ocaml-5.4
5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:oraclelinux-9-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN yum install -y zstd && yum clean packages
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:oraclelinux-9-ocaml-5.5-amd64 -> ocaml/opam:oraclelinux-9-ocaml-5.5
ocurrent/opam-staging:oraclelinux-9-ocaml-5.5-amd64 -> ocaml/opam:oraclelinux-ocaml-5.5
opensuse-15.6
opensuse-15.6/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM opensuse/leap:15.6
	LABEL distro_style="zypper"
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y -t pattern devel_C_C++
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y sudo git unzip curl gcc-c++ libcap-devel xz libX11-devel bzip2 which rsync gzip openssl
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM opensuse/leap:15.6
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y -t pattern devel_C_C++
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y sudo git unzip curl gcc-c++ libcap-devel xz libX11-devel bzip2 which rsync gzip openssl bubblewrap
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN useradd -u 1000  -d /home/opam -m --user-group opam
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	USER opam
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

opensuse-15.6/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM opensuse/leap:15.6
	LABEL distro_style="zypper"
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y -t pattern devel_C_C++
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y sudo git unzip curl gcc-c++ libcap-devel xz libX11-devel bzip2 which rsync gzip openssl
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM opensuse/leap:15.6
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y -t pattern devel_C_C++
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y sudo git unzip curl gcc-c++ libcap-devel xz libX11-devel bzip2 which rsync gzip openssl bubblewrap
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN useradd -u 1000  -d /home/opam -m --user-group opam
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	USER opam
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:opensuse-15.6-opam-arm64, ocurrent/opam-staging:opensuse-15.6-opam-amd64 -> ocaml/opam:opensuse-15.6-opam
4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.08-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.08-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.08
ocurrent/opam-staging:opensuse-15.6-ocaml-4.08-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.08-amd64 -> ocaml/opam:opensuse-ocaml-4.08
4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.09-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.09-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.09
ocurrent/opam-staging:opensuse-15.6-ocaml-4.09-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.09-amd64 -> ocaml/opam:opensuse-ocaml-4.09
4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.10-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.10-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.10
ocurrent/opam-staging:opensuse-15.6-ocaml-4.10-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.10-amd64 -> ocaml/opam:opensuse-ocaml-4.10
4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.11-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.11-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.11
ocurrent/opam-staging:opensuse-15.6-ocaml-4.11-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.11-amd64 -> ocaml/opam:opensuse-ocaml-4.11
4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.12-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.12-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.12
ocurrent/opam-staging:opensuse-15.6-ocaml-4.12-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.12-amd64 -> ocaml/opam:opensuse-ocaml-4.12
4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.13-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.13-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.13
ocurrent/opam-staging:opensuse-15.6-ocaml-4.13-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.13-amd64 -> ocaml/opam:opensuse-ocaml-4.13
4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-4.14-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.14-amd64 -> ocaml/opam:opensuse-15.6-ocaml-4.14
ocurrent/opam-staging:opensuse-15.6-ocaml-4.14-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-4.14-amd64 -> ocaml/opam:opensuse-ocaml-4.14
5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.0-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.0-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.0
ocurrent/opam-staging:opensuse-15.6-ocaml-5.0-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.0-amd64 -> ocaml/opam:opensuse-ocaml-5.0
5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.1-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.1-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.1
ocurrent/opam-staging:opensuse-15.6-ocaml-5.1-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.1-amd64 -> ocaml/opam:opensuse-ocaml-5.1
5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.2-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.2-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.2
ocurrent/opam-staging:opensuse-15.6-ocaml-5.2-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.2-amd64 -> ocaml/opam:opensuse-ocaml-5.2
5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-amd64 -> ocaml/opam:opensuse
ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-amd64 -> ocaml/opam:opensuse-15.6
ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.3
ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.3-amd64 -> ocaml/opam:opensuse-ocaml-5.3
5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-alpha1-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.4-alpha1
ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-alpha1-amd64 -> ocaml/opam:opensuse-ocaml-5.4-alpha1
5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.4
ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.4-amd64 -> ocaml/opam:opensuse-ocaml-5.4
5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-15.6-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-15.6-ocaml-5.5-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.5-amd64 -> ocaml/opam:opensuse-15.6-ocaml-5.5
ocurrent/opam-staging:opensuse-15.6-ocaml-5.5-arm64, ocurrent/opam-staging:opensuse-15.6-ocaml-5.5-amd64 -> ocaml/opam:opensuse-ocaml-5.5
opensuse-tumbleweed
opensuse-tumbleweed/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM opensuse/tumbleweed:latest
	LABEL distro_style="zypper"
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y -t pattern devel_C_C++
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y sudo git unzip curl gcc-c++ libcap-devel xz libX11-devel bzip2 which rsync gzip openssl
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.0/opam /usr/bin/opam-2.0 && chmod a+x /usr/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.1/opam /usr/bin/opam-2.1 && chmod a+x /usr/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.2/opam /usr/bin/opam-2.2 && chmod a+x /usr/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-2.3/opam /usr/bin/opam-2.3 && chmod a+x /usr/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/bin && cp /tmp/opam-build-master/opam /usr/bin/opam-master && chmod a+x /usr/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM opensuse/tumbleweed:latest
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y -t pattern devel_C_C++
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y sudo git unzip curl gcc-c++ libcap-devel xz libX11-devel bzip2 which rsync gzip openssl bubblewrap
	COPY --from=0 [ "/usr/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN useradd -u 1000  -d /home/opam -m --user-group opam
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	USER opam
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64 -> ocaml/opam:opensuse-tumbleweed-opam
4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.08-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.08
4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.09-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.09
4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.10-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.10
4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.11-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.11
4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.12-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.12
4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.13-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.13
4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-4.14-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-4.14
5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.0-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.0
5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.1-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.1
5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.2-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.2
5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.3-amd64 -> ocaml/opam:opensuse-tumbleweed
ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.3-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.3
5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.4-alpha1-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.4-alpha1
5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.4-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.4
5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:opensuse-tumbleweed-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN zypper repos repo-openh264 && zypper removerepo repo-openh264 || true
	RUN zypper update -y
	RUN zypper install --force-resolution -y zstd
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:opensuse-tumbleweed-ocaml-5.5-amd64 -> ocaml/opam:opensuse-tumbleweed-ocaml-5.5
ubuntu-22.04
ubuntu-22.04/s390x
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:jammy
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:jammy
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-22.04/ppc64le
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:jammy
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:jammy
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-22.04/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:jammy
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:jammy
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-22.04/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:jammy
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:jammy
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-22.04/riscv64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:jammy
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:jammy
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:ubuntu-22.04-opam-s390x, ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le, ocurrent/opam-staging:ubuntu-22.04-opam-arm64, ocurrent/opam-staging:ubuntu-22.04-opam-amd64, ocurrent/opam-staging:ubuntu-22.04-opam-riscv64 -> ocaml/opam:ubuntu-22.04-opam
4.08.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.08-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.08-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.08-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.08-amd64 -> ocaml/opam:ubuntu-22.04-ocaml-4.08
4.09.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.09-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.09-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.09-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.09-amd64 -> ocaml/opam:ubuntu-22.04-ocaml-4.09
4.10.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.10-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.10-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.10-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.10-amd64 -> ocaml/opam:ubuntu-22.04-ocaml-4.10
4.11.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.11-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.11-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.11-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.11-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.11-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-4.11
4.12.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.12-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.12-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.12-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.12-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.12-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-4.12
4.13.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.13-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.13-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.13-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.13-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.13-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-4.13
4.14.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-4.14-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.14-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.14-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.14-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-4.14-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-4.14
5.0.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.0-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.0-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.0-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.0-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.0-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.0
5.1.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.1-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.1-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.1-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.1-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.1-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.1
5.2.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.2-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.2-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.2-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.2-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.2-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.2
5.3.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-22.04
ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.3
5.4.0~alpha1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-alpha1-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.4-alpha1
5.4.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.4-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.4
5.5.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-22.04-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-22.04-ocaml-5.5-s390x, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.5-ppc64le, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.5-arm64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.5-amd64, ocurrent/opam-staging:ubuntu-22.04-ocaml-5.5-riscv64 -> ocaml/opam:ubuntu-22.04-ocaml-5.5
ubuntu-24.04
ubuntu-24.04/s390x
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:noble
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:noble
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.04/ppc64le
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:noble
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:noble
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.04/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:noble
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:noble
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.04/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:noble
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:noble
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.04/riscv64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:noble
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:noble
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:ubuntu-24.04-opam-s390x, ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le, ocurrent/opam-staging:ubuntu-24.04-opam-arm64, ocurrent/opam-staging:ubuntu-24.04-opam-amd64, ocurrent/opam-staging:ubuntu-24.04-opam-riscv64 -> ocaml/opam:ubuntu-24.04-opam
4.08.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-amd64 -> ocaml/opam:ubuntu-24.04-ocaml-4.08
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.08-amd64 -> ocaml/opam:ubuntu-lts-ocaml-4.08
4.09.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-amd64 -> ocaml/opam:ubuntu-24.04-ocaml-4.09
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.09-amd64 -> ocaml/opam:ubuntu-lts-ocaml-4.09
4.10.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-amd64 -> ocaml/opam:ubuntu-24.04-ocaml-4.10
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.10-amd64 -> ocaml/opam:ubuntu-lts-ocaml-4.10
4.11.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-4.11
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.11-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-4.11
4.12.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-4.12
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.12-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-4.12
4.13.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-4.13
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.13-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-4.13
4.14.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-4.14
ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-4.14-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-4.14
5.0.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.0
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.0-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.0
5.1.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.1
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.1-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.1
5.2.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.2
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.2-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.2
5.3.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-lts
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-24.04
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.3
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.3
5.4.0~alpha1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.4-alpha1
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-alpha1-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.4-alpha1
5.4.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.4
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.4-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.4
5.5.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.04-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-riscv64 -> ocaml/opam:ubuntu-24.04-ocaml-5.5
ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-s390x, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-ppc64le, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-arm64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-amd64, ocurrent/opam-staging:ubuntu-24.04-ocaml-5.5-riscv64 -> ocaml/opam:ubuntu-lts-ocaml-5.5
ubuntu-24.10
ubuntu-24.10/s390x
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:oracular
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:oracular
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.10/ppc64le
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:oracular
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:oracular
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.10/arm64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:oracular
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:oracular
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.10/amd64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:oracular
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:oracular
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ubuntu-24.10/riscv64
	# syntax=docker/dockerfile:1

	# Autogenerated by OCaml-Dockerfile scripts
	FROM ubuntu:oracular
	LABEL distro_style="apt"
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git libcap-dev sudo
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	RUN git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && cp -P -R -p . ../opam-sources && git checkout master && env MAKE='make -j' shell/bootstrap-ocaml.sh && make -C src_ext cache-archives
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.0 && cd ../opam-build-2.0 && git fetch -q && git checkout 2.0 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.0/opam /usr/local/bin/opam-2.0 && chmod a+x /usr/local/bin/opam-2.0 && rm -rf /tmp/opam-build-2.0
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.1 && cd ../opam-build-2.1 && git fetch -q && git checkout 2.1 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.1/opam /usr/local/bin/opam-2.1 && chmod a+x /usr/local/bin/opam-2.1 && rm -rf /tmp/opam-build-2.1
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.2 && cd ../opam-build-2.2 && git fetch -q && git checkout 2.2 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.2/opam /usr/local/bin/opam-2.2 && chmod a+x /usr/local/bin/opam-2.2 && rm -rf /tmp/opam-build-2.2
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-2.3 && cd ../opam-build-2.3 && git fetch -q && git checkout 2.3 && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-2.3/opam /usr/local/bin/opam-2.3 && chmod a+x /usr/local/bin/opam-2.3 && rm -rf /tmp/opam-build-2.3
	RUN cd /tmp/opam-sources && cp -P -R -p . ../opam-build-master && cd ../opam-build-master && git fetch -q && git checkout master && ln -s ../opam/src_ext/archives src_ext/archives && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-0install-solver --with-vendored-deps && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make lib-ext all && mkdir -p /usr/local/bin && cp /tmp/opam-build-master/opam /usr/local/bin/opam-master && chmod a+x /usr/local/bin/opam-master && rm -rf /tmp/opam-build-master

	FROM ubuntu:oracular
	RUN ln -fs /usr/share/zoneinfo/Europe/London /etc/localtime
	COPY <<-EOF /etc/apt/apt.conf.d/mirror-retry
		Acquire::Retries "5";
	EOF
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install build-essential curl git rsync sudo unzip nano libcap-dev libx11-dev bubblewrap
	COPY --from=0 [ "/usr/local/bin/opam-2.0", "/usr/bin/opam-2.0" ]
	RUN ln /usr/bin/opam-2.0 /usr/bin/opam
	COPY --from=0 [ "/usr/local/bin/opam-2.1", "/usr/bin/opam-2.1" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.2", "/usr/bin/opam-2.2" ]
	COPY --from=0 [ "/usr/local/bin/opam-2.3", "/usr/bin/opam-2.3" ]
	COPY --from=0 [ "/usr/local/bin/opam-master", "/usr/bin/opam-dev" ]
	RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
	COPY <<-EOF /etc/sudoers.d/opam
		opam ALL=(ALL:ALL) NOPASSWD:ALL
	EOF
	RUN chmod 440 /etc/sudoers.d/opam
	RUN chown root:root /etc/sudoers.d/opam
	RUN if getent passwd 1000; then userdel -r $(id -nu 1000); fi
	RUN adduser --uid 1000 --disabled-password --gecos '' opam
	RUN passwd -l opam
	RUN chown -R opam:opam /home/opam
	USER opam
	ENV HOME="/home/opam"
	WORKDIR /home/opam
	RUN mkdir .ssh
	RUN chmod 700 .ssh
	COPY --chown=opam <<-EOF /home/opam/.opamrc-nosandbox
		wrap-build-commands: []
		wrap-install-commands: []
		wrap-remove-commands: []
		required-tools: []
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-disable
		#!/bin/sh
		cp ~/.opamrc-nosandbox ~/.opamrc
		echo --- opam sandboxing disabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-disable
	RUN sudo mv /home/opam/opam-sandbox-disable /usr/bin/opam-sandbox-disable
	COPY --chown=opam <<-EOF /home/opam/.opamrc-sandbox
		wrap-build-commands: ["%{hooks}%/sandbox.sh" "build"]
		wrap-install-commands: ["%{hooks}%/sandbox.sh" "install"]
		wrap-remove-commands: ["%{hooks}%/sandbox.sh" "remove"]
	EOF
	COPY --chown=opam <<-EOF /home/opam/opam-sandbox-enable
		#!/bin/sh
		cp ~/.opamrc-sandbox ~/.opamrc
		echo --- opam sandboxing enabled
	EOF
	RUN chmod a+x /home/opam/opam-sandbox-enable
	RUN sudo mv /home/opam/opam-sandbox-enable /usr/bin/opam-sandbox-enable
	RUN git config --global user.email "docker@example.com"
	RUN git config --global user.name "Docker"
	COPY --link --chown=opam:opam [ ".", "/home/opam/opam-repository" ]
	RUN opam-sandbox-disable
	RUN opam init -k git -a /home/opam/opam-repository --bare
	RUN rm -rf .opam/repo/default/.git
	COPY --link [ "Dockerfile", "/Dockerfile.opam" ]

ocurrent/opam-staging:ubuntu-24.10-opam-s390x, ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le, ocurrent/opam-staging:ubuntu-24.10-opam-arm64, ocurrent/opam-staging:ubuntu-24.10-opam-amd64, ocurrent/opam-staging:ubuntu-24.10-opam-riscv64 -> ocaml/opam:ubuntu-24.10-opam
4.08.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.08 --packages=ocaml-base-compiler.4.08.1
	RUN opam pin add -k version ocaml-base-compiler 4.08.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-amd64 -> ocaml/opam:ubuntu-24.10-ocaml-4.08
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.08-amd64 -> ocaml/opam:ubuntu-ocaml-4.08
4.09.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.09 --packages=ocaml-base-compiler.4.09.1
	RUN opam pin add -k version ocaml-base-compiler 4.09.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-amd64 -> ocaml/opam:ubuntu-24.10-ocaml-4.09
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.09-amd64 -> ocaml/opam:ubuntu-ocaml-4.09
4.10.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.10 --packages=ocaml-base-compiler.4.10.2
	RUN opam pin add -k version ocaml-base-compiler 4.10.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-amd64 -> ocaml/opam:ubuntu-24.10-ocaml-4.10
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.10-amd64 -> ocaml/opam:ubuntu-ocaml-4.10
4.11.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.11 --packages=ocaml-base-compiler.4.11.2
	RUN opam pin add -k version ocaml-base-compiler 4.11.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-4.11
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.11-riscv64 -> ocaml/opam:ubuntu-ocaml-4.11
4.12.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.12 --packages=ocaml-base-compiler.4.12.1
	RUN opam pin add -k version ocaml-base-compiler 4.12.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-4.12
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.12-riscv64 -> ocaml/opam:ubuntu-ocaml-4.12
4.13.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.13 --packages=ocaml-base-compiler.4.13.1
	RUN opam pin add -k version ocaml-base-compiler 4.13.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-4.13
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.13-riscv64 -> ocaml/opam:ubuntu-ocaml-4.13
4.14.2/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

4.14.2/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 4.14 --packages=ocaml-base-compiler.4.14.2
	RUN opam pin add -k version ocaml-base-compiler 4.14.2
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-4.14
ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-4.14-riscv64 -> ocaml/opam:ubuntu-ocaml-4.14
5.0.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.0.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN opam switch create 5.0 --packages=ocaml-base-compiler.5.0.0
	RUN opam pin add -k version ocaml-base-compiler 5.0.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.0
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.0-riscv64 -> ocaml/opam:ubuntu-ocaml-5.0
5.1.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.1.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.1 --packages=ocaml-base-compiler.5.1.1
	RUN opam pin add -k version ocaml-base-compiler 5.1.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.1
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.1-riscv64 -> ocaml/opam:ubuntu-ocaml-5.1
5.2.1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.2.1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.2 --packages=ocaml-base-compiler.5.2.1
	RUN opam pin add -k version ocaml-base-compiler 5.2.1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.2
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.2-riscv64 -> ocaml/opam:ubuntu-ocaml-5.2
5.3.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.3.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.3 --packages=ocaml-base-compiler.5.3.0
	RUN opam pin add -k version ocaml-base-compiler 5.3.0
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-24.10
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.3
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.3-riscv64 -> ocaml/opam:ubuntu-ocaml-5.3
5.4.0~alpha1/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0~alpha1/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4~alpha1 --packages=ocaml-base-compiler.5.4.0~alpha1
	RUN opam pin add -k version ocaml-base-compiler 5.4.0~alpha1
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.4-alpha1
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-alpha1-riscv64 -> ocaml/opam:ubuntu-ocaml-5.4-alpha1
5.4.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.4.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.4 --packages=ocaml-variants.5.4.0+trunk
	RUN opam pin add -k version ocaml-variants 5.4.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.4
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.4-riscv64 -> ocaml/opam:ubuntu-ocaml-5.4
5.5.0/s390x
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-s390x
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/ppc64le
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-ppc64le
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/arm64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-arm64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/amd64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-amd64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

5.5.0/riscv64
	# syntax=docker/dockerfile:1

	FROM ocurrent/opam-staging:ubuntu-24.10-opam-riscv64
	RUN opam repo add beta git+https://github.com/ocaml/ocaml-beta-repository --set-default
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	USER root
	RUN apt-get -y update
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y upgrade
	RUN DEBIAN_FRONTEND=noninteractive apt-get -y install libzstd-dev
	USER opam
	RUN opam switch create 5.5 --packages=ocaml-variants.5.5.0+trunk
	RUN opam pin add -k version ocaml-variants 5.5.0+trunk
	RUN opam install -y opam-depext
	ENTRYPOINT [ "opam", "exec", "--" ]
	CMD bash
	COPY --link [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-riscv64 -> ocaml/opam:ubuntu-24.10-ocaml-5.5
ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-s390x, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-ppc64le, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-arm64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-amd64, ocurrent/opam-staging:ubuntu-24.10-ocaml-5.5-riscv64 -> ocaml/opam:ubuntu-ocaml-5.5
windows-mingw
windows-server-mingw-ltsc2022/amd64
	# escape=`

	# Autogenerated by OCaml-Dockerfile scripts
	FROM mcr.microsoft.com/windows/server:10.0.20348.2402 AS winget-builder
	USER ContainerAdministrator
	ADD [ "https://github.com/microsoft/winget-cli/releases/latest/download/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle", "C:\\TEMP\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip" ]
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip -DestinationPath C:\TEMP\winget-cli -Force"
	RUN ren C:\TEMP\winget-cli\AppInstaller_x64.msix AppInstaller_x64.zip
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\winget-cli\AppInstaller_x64.zip -DestinationPath C:\TEMP\winget-cli\ -Force"
	RUN mkdir "C:\Program Files\winget-cli" && `
	  move "C:\TEMP\winget-cli\\winget.exe" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\WindowsPackageManager.dll" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\resources.pri" "C:\Program Files\winget-cli\"

	FROM mcr.microsoft.com/windows/server:10.0.20348.2402 AS opam-builder
	USER ContainerAdministrator
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "\\$"') do `
	          for /f "delims=" %l in ('cmd /v:on /c "set v=%c&& echo !v:~0,-1!"') do `
	            reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "%l"
	ENV CYGWIN="nodosfilewarning winsymlinks:native"
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\cygwin64\bin;%c"
	ADD [ "https://www.cygwin.com/setup-x86_64.exe", "C:\\cygwin64\\setup-x86_64.exe" ]
	RUN mkdir C:\cygwin64\lib\cygsympathy && mkdir C:\cygwin64\etc\postinstall
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.cmd", "C:\\cygwin64\\lib\\cygsympathy\\" ]
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.sh", "C:\\cygwin64\\lib\\cygsympathy\\cygsympathy" ]
	RUN mklink C:\cygwin64\etc\postinstall\zp_zcygsympathy.sh C:\cygwin64\lib\cygsympathy\cygsympathy
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages diffutils,git,make,mingw64-i686-gcc-g++,mingw64-x86_64-gcc-core,mingw64-x86_64-gcc-g++,patch && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	RUN awk -i inplace "/(^#)|(^$)/{print;next}{$4=""noacl,""$4; print}" C:\cygwin64\etc\fstab
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /tmp/opam-sources"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && git checkout master && make compiler "
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.2 && cd /tmp/opam-build-2.2 && git config --global --add safe.directory /tmp/opam-build-2.2 && git checkout 2.2"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.2 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-private-runtime --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.2.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.3 && cd /tmp/opam-build-2.3 && git config --global --add safe.directory /tmp/opam-build-2.3 && git checkout 2.3"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.3 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-private-runtime --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.3.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-master && cd /tmp/opam-build-master && git config --global --add safe.directory /tmp/opam-build-master && git checkout master"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-master && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-private-runtime --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-master.exe"

	FROM mcr.microsoft.com/windows/server:10.0.20348.2402
	USER ContainerAdministrator
	LABEL distro_style="windows"
	USER ContainerAdministrator
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "\\$"') do `
	          for /f "delims=" %l in ('cmd /v:on /c "set v=%c&& echo !v:~0,-1!"') do `
	            reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "%l"
	ADD [ "https://aka.ms/vs/17/release/vc_redist.x64.exe", "C:\\TEMP\\" ]
	RUN C:\TEMP\vc_redist.x64.exe /install /passive /norestart /log C:\TEMP\vc_redist.log && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	COPY --from=winget-builder [ "C:\\Program Files\\winget-cli", "C:\\Program Files\\winget-cli" ]
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\Program Files\winget-cli;%c"
	RUN powershell -Command "$path=(Join-Path $env:LOCALAPPDATA 'Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState'); New-Item $path -ItemType Directory -Force; '{ """"$schema"""": """"https://aka.ms/winget-settings.schema.json"""", """"telemetry"""": { """"disable"""": """"true"""" } }' | Out-File -encoding ASCII (Join-Path $path 'settings.json')"
	RUN winget install --exact --accept-source-agreements --accept-package-agreements Git.Git
	ENV CYGWIN="nodosfilewarning winsymlinks:native"
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\cygwin64\bin;%c"
	ADD [ "https://www.cygwin.com/setup-x86_64.exe", "C:\\cygwin64\\setup-x86_64.exe" ]
	RUN mkdir C:\cygwin64\lib\cygsympathy && mkdir C:\cygwin64\etc\postinstall
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.cmd", "C:\\cygwin64\\lib\\cygsympathy\\" ]
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.sh", "C:\\cygwin64\\lib\\cygsympathy\\cygsympathy" ]
	RUN mklink C:\cygwin64\etc\postinstall\zp_zcygsympathy.sh C:\cygwin64\lib\cygsympathy\cygsympathy
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages curl,diffutils,git,m4,make,mingw64-x86_64-gcc-core,patch,perl,rsync,unzip && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	RUN awk -i inplace "/(^#)|(^$)/{print;next}{$4=""noacl,""$4; print}" C:\cygwin64\etc\fstab
	ADD [ "https://github.com/fdopen/opam-repository-mingw/releases/download/0.0.0.2/opam64.tar.xz", "C:\\TEMP\\" ]
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp && tar -xf /cygdrive/c/TEMP/opam64.tar.xz && ./opam64/install.sh --prefix=/usr && rm -rf opam64 opam64.tar.xz"
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.2.exe", "C:\\opam-2.2.exe" ]
	RUN move C:\opam-2.2.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.3.exe", "C:\\opam-2.3.exe" ]
	RUN move C:\opam-2.3.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-master.exe", "C:\\opam-dev.exe" ]
	RUN move C:\opam-dev.exe C:\cygwin64\usr\local\bin
	WORKDIR C:\cygwin64\home\opam
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /home/opam/opam-repository"
	COPY [ ".", "C:\\cygwin64\\home\\opam\\opam-repository" ]
	ENV OPAMROOT="C:\opam\.opam"
	RUN opam init -k git -a "C:\cygwin64\home\opam\opam-repository" --bare --disable-sandboxing
	RUN C:\cygwin64\bin\bash.exe --login -c "rm -rf /cygdrive/c/opam/.opam/repo/default/.git"
	COPY [ "Dockerfile", "/Dockerfile.opam" ]

4.14.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.14 --packages=ocaml-variants.4.14.2+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.14.2+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

windows-mingw-ltsc2019/amd64
	# escape=`

	# Autogenerated by OCaml-Dockerfile scripts
	FROM mcr.microsoft.com/windows:10.0.17763.5696 AS winget-builder
	USER ContainerAdministrator
	ADD [ "https://github.com/microsoft/winget-cli/releases/latest/download/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle", "C:\\TEMP\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip" ]
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip -DestinationPath C:\TEMP\winget-cli -Force"
	RUN ren C:\TEMP\winget-cli\AppInstaller_x64.msix AppInstaller_x64.zip
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\winget-cli\AppInstaller_x64.zip -DestinationPath C:\TEMP\winget-cli\ -Force"
	RUN mkdir "C:\Program Files\winget-cli" && `
	  move "C:\TEMP\winget-cli\\winget.exe" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\WindowsPackageManager.dll" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\resources.pri" "C:\Program Files\winget-cli\"

	FROM mcr.microsoft.com/windows:10.0.17763.5696 AS opam-builder
	USER ContainerAdministrator
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "\\$"') do `
	          for /f "delims=" %l in ('cmd /v:on /c "set v=%c&& echo !v:~0,-1!"') do `
	            reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "%l"
	ENV CYGWIN="nodosfilewarning winsymlinks:native"
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\cygwin64\bin;%c"
	ADD [ "https://www.cygwin.com/setup-x86_64.exe", "C:\\cygwin64\\setup-x86_64.exe" ]
	RUN mkdir C:\cygwin64\lib\cygsympathy && mkdir C:\cygwin64\etc\postinstall
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.cmd", "C:\\cygwin64\\lib\\cygsympathy\\" ]
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.sh", "C:\\cygwin64\\lib\\cygsympathy\\cygsympathy" ]
	RUN mklink C:\cygwin64\etc\postinstall\zp_zcygsympathy.sh C:\cygwin64\lib\cygsympathy\cygsympathy
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages diffutils,git,make,mingw64-i686-gcc-g++,mingw64-x86_64-gcc-core,mingw64-x86_64-gcc-g++,patch && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	RUN C:\cygwin64\bin\peflags -d0 C:\cygwin64\bin\cygwin1.dll
	RUN awk -i inplace "/(^#)|(^$)/{print;next}{$4=""noacl,""$4; print}" C:\cygwin64\etc\fstab
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /tmp/opam-sources"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && git checkout master && make compiler "
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.2 && cd /tmp/opam-build-2.2 && git config --global --add safe.directory /tmp/opam-build-2.2 && git checkout 2.2"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.2 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-private-runtime --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.2.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.3 && cd /tmp/opam-build-2.3 && git config --global --add safe.directory /tmp/opam-build-2.3 && git checkout 2.3"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.3 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-private-runtime --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.3.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-master && cd /tmp/opam-build-master && git config --global --add safe.directory /tmp/opam-build-master && git checkout master"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-master && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check --with-private-runtime --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-master.exe"

	FROM mcr.microsoft.com/windows:10.0.17763.5696
	USER ContainerAdministrator
	LABEL distro_style="windows"
	USER ContainerAdministrator
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "\\$"') do `
	          for /f "delims=" %l in ('cmd /v:on /c "set v=%c&& echo !v:~0,-1!"') do `
	            reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "%l"
	ADD [ "https://aka.ms/vs/17/release/vc_redist.x64.exe", "C:\\TEMP\\" ]
	RUN C:\TEMP\vc_redist.x64.exe /install /passive /norestart /log C:\TEMP\vc_redist.log && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	COPY --from=winget-builder [ "C:\\Program Files\\winget-cli", "C:\\Program Files\\winget-cli" ]
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\Program Files\winget-cli;%c"
	RUN powershell -Command "$path=(Join-Path $env:LOCALAPPDATA 'Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState'); New-Item $path -ItemType Directory -Force; '{ """"$schema"""": """"https://aka.ms/winget-settings.schema.json"""", """"telemetry"""": { """"disable"""": """"true"""" } }' | Out-File -encoding ASCII (Join-Path $path 'settings.json')"
	ENV CYGWIN="nodosfilewarning winsymlinks:native"
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\cygwin64\bin;%c"
	ADD [ "https://www.cygwin.com/setup-x86_64.exe", "C:\\cygwin64\\setup-x86_64.exe" ]
	RUN mkdir C:\cygwin64\lib\cygsympathy && mkdir C:\cygwin64\etc\postinstall
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.cmd", "C:\\cygwin64\\lib\\cygsympathy\\" ]
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.sh", "C:\\cygwin64\\lib\\cygsympathy\\cygsympathy" ]
	RUN mklink C:\cygwin64\etc\postinstall\zp_zcygsympathy.sh C:\cygwin64\lib\cygsympathy\cygsympathy
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages curl,diffutils,git,m4,make,mingw64-x86_64-gcc-core,patch,perl,rsync,unzip && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	RUN C:\cygwin64\bin\peflags -d0 C:\cygwin64\bin\cygwin1.dll
	RUN awk -i inplace "/(^#)|(^$)/{print;next}{$4=""noacl,""$4; print}" C:\cygwin64\etc\fstab
	ADD [ "https://github.com/fdopen/opam-repository-mingw/releases/download/0.0.0.2/opam64.tar.xz", "C:\\TEMP\\" ]
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp && tar -xf /cygdrive/c/TEMP/opam64.tar.xz && ./opam64/install.sh --prefix=/usr && rm -rf opam64 opam64.tar.xz"
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.2.exe", "C:\\opam-2.2.exe" ]
	RUN move C:\opam-2.2.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.3.exe", "C:\\opam-2.3.exe" ]
	RUN move C:\opam-2.3.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-master.exe", "C:\\opam-dev.exe" ]
	RUN move C:\opam-dev.exe C:\cygwin64\usr\local\bin
	WORKDIR C:\cygwin64\home\opam
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /home/opam/opam-repository"
	COPY [ ".", "C:\\cygwin64\\home\\opam\\opam-repository" ]
	ENV OPAMROOT="C:\opam\.opam"
	RUN opam init -k git -a "C:\cygwin64\home\opam\opam-repository" --bare --disable-sandboxing
	RUN C:\cygwin64\bin\bash.exe --login -c "rm -rf /cygdrive/c/opam/.opam/repo/default/.git"
	COPY [ "Dockerfile", "/Dockerfile.opam" ]

4.14.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.14 --packages=ocaml-variants.4.14.2+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.14.2+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.14-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.14-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.14
4.13.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.13 --packages=ocaml-variants.4.13.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.13.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.13 --packages=ocaml-variants.4.13.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.13.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.13-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.13-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.13
4.12.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.12 --packages=ocaml-variants.4.12.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.12.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.12 --packages=ocaml-variants.4.12.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.12.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.12-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.12-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.12
4.11.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.11 --packages=ocaml-variants.4.11.2+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.11.2+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.11 --packages=ocaml-variants.4.11.2+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.11.2+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.11-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.11-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.11
4.10.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.10 --packages=ocaml-variants.4.10.2+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.10.2+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.10 --packages=ocaml-variants.4.10.2+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.10.2+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.10-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.10-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.10
4.09.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.09 --packages=ocaml-variants.4.09.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.09.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.09 --packages=ocaml-variants.4.09.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.09.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.09-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.09-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.09
4.08.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.08 --packages=ocaml-variants.4.08.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.08.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --no-opam -- opam switch create 4.08 --packages=ocaml-variants.4.08.1+mingw64
	RUN ocaml-env exec --64 -- opam pin add -k version ocaml-variants 4.08.1+mingw64
	RUN ocaml-env exec --64 -- opam install -y depext depext-cygwinports
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.08-amd64, ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.08-amd64 -> ocaml/opam:windows-all-mingw-ocaml-4.08
ocurrent/opam-staging:windows-server-mingw-ltsc2022-opam-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-opam
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.08-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.08
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.08-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.08
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.09-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.09
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.09-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.09
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.10-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.10
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.10-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.10
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.11-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.11
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.11-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.11
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.12-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.12
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.12-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.12
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.13-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.13
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.13-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.13
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.14-amd64 -> ocaml/opam:windows-server-mingw-ltsc2022-ocaml-4.14
ocurrent/opam-staging:windows-server-mingw-ltsc2022-ocaml-4.14-amd64 -> ocaml/opam:windows-server-mingw-ocaml-4.14
ocurrent/opam-staging:windows-mingw-ltsc2019-opam-amd64 -> ocaml/opam:windows-mingw-ltsc2019-opam
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.08-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.08
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.08-amd64 -> ocaml/opam:windows-mingw-ocaml-4.08
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.09-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.09
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.09-amd64 -> ocaml/opam:windows-mingw-ocaml-4.09
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.10-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.10
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.10-amd64 -> ocaml/opam:windows-mingw-ocaml-4.10
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.11-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.11
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.11-amd64 -> ocaml/opam:windows-mingw-ocaml-4.11
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.12-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.12
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.12-amd64 -> ocaml/opam:windows-mingw-ocaml-4.12
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.13-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.13
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.13-amd64 -> ocaml/opam:windows-mingw-ocaml-4.13
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.14-amd64 -> ocaml/opam:windows-mingw-ltsc2019-ocaml-4.14
ocurrent/opam-staging:windows-mingw-ltsc2019-ocaml-4.14-amd64 -> ocaml/opam:windows-mingw-ocaml-4.14
windows-msvc
windows-server-msvc-ltsc2022/amd64
	# escape=`

	# Autogenerated by OCaml-Dockerfile scripts
	FROM mcr.microsoft.com/windows/server:10.0.20348.2402 AS winget-builder
	USER ContainerAdministrator
	ADD [ "https://github.com/microsoft/winget-cli/releases/latest/download/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle", "C:\\TEMP\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip" ]
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip -DestinationPath C:\TEMP\winget-cli -Force"
	RUN ren C:\TEMP\winget-cli\AppInstaller_x64.msix AppInstaller_x64.zip
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\winget-cli\AppInstaller_x64.zip -DestinationPath C:\TEMP\winget-cli\ -Force"
	RUN mkdir "C:\Program Files\winget-cli" && `
	  move "C:\TEMP\winget-cli\\winget.exe" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\WindowsPackageManager.dll" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\resources.pri" "C:\Program Files\winget-cli\"

	FROM mcr.microsoft.com/windows/server:10.0.20348.2402 AS cygwin-msvc
	USER ContainerAdministrator
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "\\$"') do `
	          for /f "delims=" %l in ('cmd /v:on /c "set v=%c&& echo !v:~0,-1!"') do `
	            reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "%l"
	ADD [ "https://raw.githubusercontent.com/ocurrent/ocaml-dockerfile/master/src-opam/Install.cmd", "C:\\TEMP\\" ]
	ADD [ "https://aka.ms/vscollect.exe", "C:\\TEMP\\collect.exe" ]
	ADD [ "https://aka.ms/vs/17/release/channel", "C:\\TEMP\\VisualStudio.chman" ]
	RUN curl -SL --output C:\TEMP\vs_buildtools.exe https://aka.ms/vs/17/release/vs_buildtools.exe `
	    && (call C:\TEMP\Install.cmd C:\TEMP\vs_buildtools.exe --quiet --wait --norestart --nocache install `
	        --installPath "%ProgramFiles(x86)%\Microsoft Visual Studio\2022\BuildTools" `
	        --channelUri C:\TEMP\VisualStudio.chman `
	        --installChannelUri C:\TEMP\VisualStudio.chman `
	        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
	        --add Microsoft.VisualStudio.Component.Windows10SDK.18362 `
	        --remove Microsoft.VisualStudio.Component.Windows10SDK.10240 `
	        --remove Microsoft.VisualStudio.Component.Windows10SDK.10586 `
	        --remove Microsoft.VisualStudio.Component.Windows10SDK.14393 `
	        --remove Microsoft.VisualStudio.Component.Windows81SDK) `
	    && del /q C:\TEMP\vs_buildtools.exe
	ENV CYGWIN="nodosfilewarning winsymlinks:native"
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\cygwin64\bin;%c"
	ADD [ "https://www.cygwin.com/setup-x86_64.exe", "C:\\cygwin64\\setup-x86_64.exe" ]
	RUN mkdir C:\cygwin64\lib\cygsympathy && mkdir C:\cygwin64\etc\postinstall
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.cmd", "C:\\cygwin64\\lib\\cygsympathy\\" ]
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.sh", "C:\\cygwin64\\lib\\cygsympathy\\cygsympathy" ]
	RUN mklink C:\cygwin64\etc\postinstall\zp_zcygsympathy.sh C:\cygwin64\lib\cygsympathy\cygsympathy
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages diffutils,git,make,patch && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	ADD [ "https://github.com/metastack/msvs-tools/archive/refs/heads/master.tar.gz", "C:\\TEMP\\msvs-tools.tar.gz" ]
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp && tar -xf /cygdrive/c/TEMP/msvs-tools.tar.gz && cp msvs-tools-master/msvs-detect msvs-tools-master/msvs-promote-path /bin && rm -rf /cygdrive/c/TEMP/msvs-tools/*"
	RUN awk -i inplace "/(^#)|(^$)/{print;next}{$4=""noacl,""$4; print}" C:\cygwin64\etc\fstab

	FROM cygwin-msvc AS opam-builder
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /tmp/opam-sources"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && git checkout master && make compiler OCAML_PORT=msvc64"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.2 && cd /tmp/opam-build-2.2 && git config --global --add safe.directory /tmp/opam-build-2.2 && git checkout 2.2"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.2 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check  --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.2.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.3 && cd /tmp/opam-build-2.3 && git config --global --add safe.directory /tmp/opam-build-2.3 && git checkout 2.3"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.3 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check  --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.3.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-master && cd /tmp/opam-build-master && git config --global --add safe.directory /tmp/opam-build-master && git checkout master"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-master && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check  --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-master.exe"

	FROM cygwin-msvc
	LABEL distro_style="windows"
	USER ContainerAdministrator
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages curl,diffutils,git,m4,make,patch,perl,rsync,unzip && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	ADD [ "https://github.com/fdopen/opam-repository-mingw/releases/download/0.0.0.2/opam64.tar.xz", "C:\\TEMP\\" ]
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp && tar -xf /cygdrive/c/TEMP/opam64.tar.xz && ./opam64/install.sh --prefix=/usr && rm -rf opam64 opam64.tar.xz"
	ADD [ "https://aka.ms/vs/17/release/vc_redist.x64.exe", "C:\\TEMP\\" ]
	RUN C:\TEMP\vc_redist.x64.exe /install /passive /norestart /log C:\TEMP\vc_redist.log && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	COPY --from=winget-builder [ "C:\\Program Files\\winget-cli", "C:\\Program Files\\winget-cli" ]
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\Program Files\winget-cli;%c"
	RUN powershell -Command "$path=(Join-Path $env:LOCALAPPDATA 'Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState'); New-Item $path -ItemType Directory -Force; '{ """"$schema"""": """"https://aka.ms/winget-settings.schema.json"""", """"telemetry"""": { """"disable"""": """"true"""" } }' | Out-File -encoding ASCII (Join-Path $path 'settings.json')"
	RUN winget install --exact --accept-source-agreements --accept-package-agreements Git.Git
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.2.exe", "C:\\opam-2.2.exe" ]
	RUN move C:\opam-2.2.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.3.exe", "C:\\opam-2.3.exe" ]
	RUN move C:\opam-2.3.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-master.exe", "C:\\opam-dev.exe" ]
	RUN move C:\opam-dev.exe C:\cygwin64\usr\local\bin
	WORKDIR C:\cygwin64\home\opam
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /home/opam/opam-repository"
	COPY [ ".", "C:\\cygwin64\\home\\opam\\opam-repository" ]
	ENV OPAMROOT="C:\opam\.opam"
	RUN opam init -k git -a "C:\cygwin64\home\opam\opam-repository" --bare --disable-sandboxing
	RUN opam repo add ocurrent-overlay git+https://github.com/ocurrent/opam-repository-mingw#overlay --set-default
	RUN C:\cygwin64\bin\bash.exe --login -c "rm -rf /cygdrive/c/opam/.opam/repo/default/.git"
	COPY [ "Dockerfile", "/Dockerfile.opam" ]

4.14.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.14 --packages=ocaml-variants.4.14.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.14.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

windows-msvc-ltsc2019/amd64
	# escape=`

	# Autogenerated by OCaml-Dockerfile scripts
	FROM mcr.microsoft.com/windows:10.0.17763.5696 AS winget-builder
	USER ContainerAdministrator
	ADD [ "https://github.com/microsoft/winget-cli/releases/latest/download/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle", "C:\\TEMP\\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip" ]
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.zip -DestinationPath C:\TEMP\winget-cli -Force"
	RUN ren C:\TEMP\winget-cli\AppInstaller_x64.msix AppInstaller_x64.zip
	RUN powershell -Command "Expand-Archive -LiteralPath C:\TEMP\winget-cli\AppInstaller_x64.zip -DestinationPath C:\TEMP\winget-cli\ -Force"
	RUN mkdir "C:\Program Files\winget-cli" && `
	  move "C:\TEMP\winget-cli\\winget.exe" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\WindowsPackageManager.dll" "C:\Program Files\winget-cli\" && `
	  move "C:\TEMP\winget-cli\\resources.pri" "C:\Program Files\winget-cli\"

	FROM mcr.microsoft.com/windows:10.0.17763.5696 AS cygwin-msvc
	USER ContainerAdministrator
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "\\$"') do `
	          for /f "delims=" %l in ('cmd /v:on /c "set v=%c&& echo !v:~0,-1!"') do `
	            reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "%l"
	ADD [ "https://raw.githubusercontent.com/ocurrent/ocaml-dockerfile/master/src-opam/Install.cmd", "C:\\TEMP\\" ]
	ADD [ "https://aka.ms/vscollect.exe", "C:\\TEMP\\collect.exe" ]
	ADD [ "https://aka.ms/vs/17/release/channel", "C:\\TEMP\\VisualStudio.chman" ]
	RUN curl -SL --output C:\TEMP\vs_buildtools.exe https://aka.ms/vs/17/release/vs_buildtools.exe `
	    && (call C:\TEMP\Install.cmd C:\TEMP\vs_buildtools.exe --quiet --wait --norestart --nocache install `
	        --installPath "%ProgramFiles(x86)%\Microsoft Visual Studio\2022\BuildTools" `
	        --channelUri C:\TEMP\VisualStudio.chman `
	        --installChannelUri C:\TEMP\VisualStudio.chman `
	        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
	        --add Microsoft.VisualStudio.Component.Windows10SDK.18362 `
	        --remove Microsoft.VisualStudio.Component.Windows10SDK.10240 `
	        --remove Microsoft.VisualStudio.Component.Windows10SDK.10586 `
	        --remove Microsoft.VisualStudio.Component.Windows10SDK.14393 `
	        --remove Microsoft.VisualStudio.Component.Windows81SDK) `
	    && del /q C:\TEMP\vs_buildtools.exe
	ENV CYGWIN="nodosfilewarning winsymlinks:native"
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\cygwin64\bin;%c"
	ADD [ "https://www.cygwin.com/setup-x86_64.exe", "C:\\cygwin64\\setup-x86_64.exe" ]
	RUN mkdir C:\cygwin64\lib\cygsympathy && mkdir C:\cygwin64\etc\postinstall
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.cmd", "C:\\cygwin64\\lib\\cygsympathy\\" ]
	ADD [ "https://raw.githubusercontent.com/metastack/cygsympathy/master/cygsympathy.sh", "C:\\cygwin64\\lib\\cygsympathy\\cygsympathy" ]
	RUN mklink C:\cygwin64\etc\postinstall\zp_zcygsympathy.sh C:\cygwin64\lib\cygsympathy\cygsympathy
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages diffutils,git,make,patch && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	RUN C:\cygwin64\bin\peflags -d0 C:\cygwin64\bin\cygwin1.dll
	ADD [ "https://github.com/metastack/msvs-tools/archive/refs/heads/master.tar.gz", "C:\\TEMP\\msvs-tools.tar.gz" ]
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp && tar -xf /cygdrive/c/TEMP/msvs-tools.tar.gz && cp msvs-tools-master/msvs-detect msvs-tools-master/msvs-promote-path /bin && rm -rf /cygdrive/c/TEMP/msvs-tools/*"
	RUN awk -i inplace "/(^#)|(^$)/{print;next}{$4=""noacl,""$4; print}" C:\cygwin64\etc\fstab

	FROM cygwin-msvc AS opam-builder
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /tmp/opam-sources"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone https://github.com/ocaml/opam /tmp/opam && cd /tmp/opam && git checkout master && make compiler OCAML_PORT=msvc64"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.2 && cd /tmp/opam-build-2.2 && git config --global --add safe.directory /tmp/opam-build-2.2 && git checkout 2.2"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.2 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check  --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.2.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-2.3 && cd /tmp/opam-build-2.3 && git config --global --add safe.directory /tmp/opam-build-2.3 && git checkout 2.3"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-2.3 && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check  --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-2.3.exe"
	RUN C:\cygwin64\bin\bash.exe --login -c "git clone /tmp/opam /tmp/opam-build-master && cd /tmp/opam-build-master && git config --global --add safe.directory /tmp/opam-build-master && git checkout master"
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp/opam-build-master && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" ./configure --enable-cold-check  --with-vendored-deps --with-0install-solver && env PATH="/tmp/opam/bootstrap/ocaml/bin:$PATH" make && make install && mv /usr/local/bin/opam.exe /usr/local/bin/opam-master.exe"

	FROM cygwin-msvc
	LABEL distro_style="windows"
	USER ContainerAdministrator
	RUN C:\cygwin64\setup-x86_64.exe --quiet-mode --no-shortcuts --no-startmenu --no-desktop --only-site --local-package-dir C:\TEMP\cache --root C:\cygwin64 --site https://mirrors.kernel.org/sourceware/cygwin/ --symlink-type=native --packages curl,diffutils,git,m4,make,patch,perl,rsync,unzip && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	ADD [ "https://github.com/fdopen/opam-repository-mingw/releases/download/0.0.0.2/opam64.tar.xz", "C:\\TEMP\\" ]
	RUN C:\cygwin64\bin\bash.exe --login -c "cd /tmp && tar -xf /cygdrive/c/TEMP/opam64.tar.xz && ./opam64/install.sh --prefix=/usr && rm -rf opam64 opam64.tar.xz"
	ADD [ "https://aka.ms/vs/17/release/vc_redist.x64.exe", "C:\\TEMP\\" ]
	RUN C:\TEMP\vc_redist.x64.exe /install /passive /norestart /log C:\TEMP\vc_redist.log && `
	  powershell -Command "Remove-Item 'C:\TEMP' -Recurse"
	COPY --from=winget-builder [ "C:\\Program Files\\winget-cli", "C:\\Program Files\\winget-cli" ]
	RUN for /f "tokens=1,2,*" %a in ('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path ^| findstr /r "^[^H]"') do `
	        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment" /V Path /t REG_EXPAND_SZ /f /d "C:\Program Files\winget-cli;%c"
	RUN powershell -Command "$path=(Join-Path $env:LOCALAPPDATA 'Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\LocalState'); New-Item $path -ItemType Directory -Force; '{ """"$schema"""": """"https://aka.ms/winget-settings.schema.json"""", """"telemetry"""": { """"disable"""": """"true"""" } }' | Out-File -encoding ASCII (Join-Path $path 'settings.json')"
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.2.exe", "C:\\opam-2.2.exe" ]
	RUN move C:\opam-2.2.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-2.3.exe", "C:\\opam-2.3.exe" ]
	RUN move C:\opam-2.3.exe C:\cygwin64\usr\local\bin
	COPY --from=opam-builder [ "C:\\cygwin64\\usr\\local\\bin\\opam-master.exe", "C:\\opam-dev.exe" ]
	RUN move C:\opam-dev.exe C:\cygwin64\usr\local\bin
	WORKDIR C:\cygwin64\home\opam
	ENV HOME="C:\cygwin64\home\opam"
	RUN C:\cygwin64\bin\bash.exe --login -c "git config --global user.email 'docker@example.com' && git config --global user.name 'Docker' && git config --system core.longpaths true && git config --global --add safe.directory /home/opam/opam-repository"
	COPY [ ".", "C:\\cygwin64\\home\\opam\\opam-repository" ]
	ENV OPAMROOT="C:\opam\.opam"
	RUN opam init -k git -a "C:\cygwin64\home\opam\opam-repository" --bare --disable-sandboxing
	RUN opam repo add ocurrent-overlay git+https://github.com/ocurrent/opam-repository-mingw#overlay --set-default
	RUN C:\cygwin64\bin\bash.exe --login -c "rm -rf /cygdrive/c/opam/.opam/repo/default/.git"
	COPY [ "Dockerfile", "/Dockerfile.opam" ]

4.14.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.14 --packages=ocaml-variants.4.14.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.14.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.14-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.14-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.14
4.13.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.13 --packages=ocaml-variants.4.13.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.13.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.13.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.13 --packages=ocaml-variants.4.13.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.13.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.13-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.13-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.13
4.12.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.12 --packages=ocaml-variants.4.12.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.12.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.12.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.12 --packages=ocaml-variants.4.12.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.12.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.12-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.12-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.12
4.11.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.11 --packages=ocaml-variants.4.11.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.11.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.11.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.11 --packages=ocaml-variants.4.11.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.11.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.11-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.11-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.11
4.10.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.10 --packages=ocaml-variants.4.10.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.10.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.10.2/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.10 --packages=ocaml-variants.4.10.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.10.2+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.10-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.10-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.10
4.09.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.09 --packages=ocaml-variants.4.09.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.09.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.09.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.09 --packages=ocaml-variants.4.09.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.09.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.09-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.09-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.09
4.08.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.08 --packages=ocaml-variants.4.08.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.08.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

4.08.1/amd64
	# escape=`

	FROM ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64
	ENV OPAMYES="1" OPAMCONFIRMLEVEL="unsafe-yes" OPAMERRLOGLEN="0" OPAMPRECISETRACKING="1"
	RUN ocaml-env exec --64 --ms --no-opam -- opam switch create 4.08 --packages=ocaml-variants.4.08.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam pin add -k version ocaml-variants 4.08.1+msvc64
	RUN ocaml-env exec --64 --ms -- opam install -y depext
	ENTRYPOINT [ "ocaml-env", "exec", "--64", "--ms", "--" ]
	CMD [ "cmd.exe" ]
	COPY [ "Dockerfile", "/Dockerfile.ocaml" ]

ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.08-amd64, ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.08-amd64 -> ocaml/opam:windows-all-msvc-ocaml-4.08
ocurrent/opam-staging:windows-server-msvc-ltsc2022-opam-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-opam
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.08-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.08
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.08-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.08
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.09-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.09
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.09-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.09
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.10-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.10
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.10-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.10
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.11-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.11
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.11-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.11
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.12-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.12
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.12-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.12
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.13-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.13
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.13-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.13
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.14-amd64 -> ocaml/opam:windows-server-msvc-ltsc2022-ocaml-4.14
ocurrent/opam-staging:windows-server-msvc-ltsc2022-ocaml-4.14-amd64 -> ocaml/opam:windows-server-msvc-ocaml-4.14
ocurrent/opam-staging:windows-msvc-ltsc2019-opam-amd64 -> ocaml/opam:windows-msvc-ltsc2019-opam
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.08-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.08
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.08-amd64 -> ocaml/opam:windows-msvc-ocaml-4.08
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.09-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.09
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.09-amd64 -> ocaml/opam:windows-msvc-ocaml-4.09
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.10-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.10
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.10-amd64 -> ocaml/opam:windows-msvc-ocaml-4.10
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.11-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.11
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.11-amd64 -> ocaml/opam:windows-msvc-ocaml-4.11
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.12-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.12
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.12-amd64 -> ocaml/opam:windows-msvc-ocaml-4.12
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.13-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.13
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.13-amd64 -> ocaml/opam:windows-msvc-ocaml-4.13
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.14-amd64 -> ocaml/opam:windows-msvc-ltsc2019-ocaml-4.14
ocurrent/opam-staging:windows-msvc-ltsc2019-ocaml-4.14-amd64 -> ocaml/opam:windows-msvc-ocaml-4.14
